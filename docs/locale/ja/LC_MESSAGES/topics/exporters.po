# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008–2018, Scrapy developers
# This file is distributed under the same license as the Scrapy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Scrapy \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-10 01:26+0900\n"
"PO-Revision-Date: 2021-05-02 17:10+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../topics/exporters.rst:5
msgid "Item Exporters"
msgstr "アイテム・エクスポーター"

#: ../../topics/exporters.rst:10
msgid ""
"Once you have scraped your items, you often want to persist or export those "
"items, to use the data in some other application. That is, after all, the "
"whole purpose of the scraping process."
msgstr ""
"アイテムをスクレイピングしたら、他のアプリケーションでデータを使用するため"
"に、それらのアイテムを永続化またはエクスポートすることがよくあります。 つま"
"り、結局のところ、それがスクレイピング・プロセス全体の目的です。"

#: ../../topics/exporters.rst:14
msgid ""
"For this purpose Scrapy provides a collection of Item Exporters for "
"different output formats, such as XML, CSV or JSON."
msgstr ""
"この目的のために、Scrapyは、XML、CSV、JSONなどのさまざまな出力形式のアイテ"
"ム・エクスポーターのコレクションを提供します。"

#: ../../topics/exporters.rst:18
msgid "Using Item Exporters"
msgstr "アイテム・エクスポーターの使用"

#: ../../topics/exporters.rst:20
msgid ""
"If you are in a hurry, and just want to use an Item Exporter to output "
"scraped data see the :ref:`topics-feed-exports`. Otherwise, if you want to "
"know how Item Exporters work or need more custom functionality (not covered "
"by the default exports), continue reading below."
msgstr ""
"あなたが急いでいて、アイテム・エクスポータを使用してスクレイプ・データを出力"
"するだけの場合は、 :ref:`topics-feed-exports` を参照してください。それ以外の"
"場合または、アイテム・エクスポータがどのように機能するかを知りたい場合また"
"は、またはより多くのカスタム機能(デフォルトのエクスポートではカバーされてない"
"機能)が必要な場合は、以下をお読みください。"

#: ../../topics/exporters.rst:25
msgid ""
"In order to use an Item Exporter, you  must instantiate it with its required "
"args. Each Item Exporter requires different arguments, so check each "
"exporter documentation to be sure, in :ref:`topics-exporters-reference`. "
"After you have instantiated your exporter, you have to:"
msgstr ""
"アイテム・エクスポーターを使用するには、必要な引数でインスタンス化する必要が"
"あります。 各アイテム・エクスポーターには異なる引数が必要なため、 :ref:"
"`topics-exporters-reference` で各エクスポーターのドキュメントを確認してくださ"
"い。エクスポーターをインスタンス化した後、以下の作業が必要です:"

#: ../../topics/exporters.rst:30
msgid ""
"1. call the method :meth:`~BaseItemExporter.start_exporting` in order to "
"signal the beginning of the exporting process"
msgstr ""
"1.エクスポート・プロセスの開始を通知するために、メソッド :meth:`~BaseItem "
"Exporter.start export` を呼び出します。"

#: ../../topics/exporters.rst:33
msgid ""
"2. call the :meth:`~BaseItemExporter.export_item` method for each item you "
"want to export"
msgstr ""
"2.エクスポートする各アイテムに対して :meth:`~BaseItemExporter.export_item` メ"
"ソッドを呼び出します"

#: ../../topics/exporters.rst:36
msgid ""
"3. and finally call the :meth:`~BaseItemExporter.finish_exporting` to signal "
"the end of the exporting process"
msgstr ""
"3.最後に :meth:`~BaseItem Exporter.finish export` を呼び出して、エクスポー"
"ト・プロセスの終了を通知します"

#: ../../topics/exporters.rst:39
msgid ""
"Here you can see an :doc:`Item Pipeline <item-pipeline>` which uses multiple "
"Item Exporters to group scraped items to different files according to the "
"value of one of their fields::"
msgstr ""
"以下の :doc:`アイテム・パイプライン<item-pipeline>` をご覧ください。これは、"
"複数のアイテム・エクスポーターを使用して、それらのフィールドの値に従って、ス"
"クレイプされたアイテムを異なるファイルにグループ化します::"

#: ../../topics/exporters.rst:76
msgid "Serialization of item fields"
msgstr "アイテム・フィールドのシリアル化"

#: ../../topics/exporters.rst:78
msgid ""
"By default, the field values are passed unmodified to the underlying "
"serialization library, and the decision of how to serialize them is "
"delegated to each particular serialization library."
msgstr ""
"デフォルトでは、フィールド値は変更されずに基礎となるシリアル化ライブラリに渡"
"され、それらをシリアル化する方法の決定は特定の各シリアル化ライブラリに委任さ"
"れます。"

#: ../../topics/exporters.rst:82
msgid ""
"However, you can customize how each field value is serialized *before it is "
"passed to the serialization library*."
msgstr ""
"ただし、あなたは、各フィールド値をシリアル化する方法を、 **シリアル化ライブラ"
"リに渡す前の段階で** カスタマイズできます。"

#: ../../topics/exporters.rst:85
msgid ""
"There are two ways to customize how a field will be serialized, which are "
"described next."
msgstr ""
"フィールドのシリアル化方法をカスタマイズするには、以下の2つの方法があります。"

#: ../../topics/exporters.rst:91
msgid "1. Declaring a serializer in the field"
msgstr "1. フィールドでシリアライザーを宣言する"

#: ../../topics/exporters.rst:93
msgid ""
"If you use :class:`~.Item` you can declare a serializer in the :ref:`field "
"metadata <topics-items-fields>`. The serializer must be a callable which "
"receives a value and returns its serialized form."
msgstr ""
"あなたが :class:`~.Item` を使用する場合、 :ref:`フィールド・メタ・データ"
"<topics-items-fields>` でシリアライザーを宣言できます。シリアライザーは、値を"
"受け取り、シリアル化された形式を返す、呼び出し可能オブジェクトでなければなり"
"ません。"

#: ../../topics/exporters.rst:97 ../../topics/exporters.rst:118
msgid "Example::"
msgstr "例::"

#: ../../topics/exporters.rst:110
msgid "2. Overriding the serialize_field() method"
msgstr "2. serialize_field() メソッドをオーバーライドする"

#: ../../topics/exporters.rst:112
msgid ""
"You can also override the :meth:`~BaseItemExporter.serialize_field()` method "
"to customize how your field value will be exported."
msgstr ""
"あなたは :meth:`~BaseItemExporter.serialize_field()` メソッドをオーバーライド"
"して、フィールド値のエクスポート方法をカスタマイズすることもできます。"

#: ../../topics/exporters.rst:115
msgid ""
"Make sure you call the base class :meth:`~BaseItemExporter."
"serialize_field()` method after your custom code."
msgstr ""
"カスタムコードの後に必ずベースクラス :meth:`~BaseItemExporter."
"serialize_field()` メソッドを呼び出してください。"

#: ../../topics/exporters.rst:132
msgid "Built-in Item Exporters reference"
msgstr "組み込みアイテム・エクスポーター・リファレンス"

#: ../../topics/exporters.rst:134
msgid ""
"Here is a list of the Item Exporters bundled with Scrapy. Some of them "
"contain output examples, which assume you're exporting these two items::"
msgstr ""
"Scrapyにバンドルされているアイテム・エクスポーターのリストを次に示します。そ"
"れらの一部には、以下の2つのアイテムをエクスポートすることを想定した出力例が含"
"まれています::"

#: ../../topics/exporters.rst:141
msgid "BaseItemExporter"
msgstr "BaseItemExporter"

#: ../../topics/exporters.rst:145
msgid ""
"This is the (abstract) base class for all Item Exporters. It provides "
"support for common features used by all (concrete) Item Exporters, such as "
"defining what fields to export, whether to export empty fields, or which "
"encoding to use."
msgstr ""
"これは、すべてのアイテム・エクスポーターの(抽象的な)基本クラスです。 エクス"
"ポートするフィールド、空のフィールドをエクスポートするか、使用するエンコード"
"を定義するなど、すべての(具体的な)アイテム・エクスポーターで使用される共通機"
"能のサポートを提供します。"

#: ../../topics/exporters.rst:150
msgid ""
"These features can be configured through the ``__init__`` method arguments "
"which populate their respective instance attributes: :attr:"
"`fields_to_export`, :attr:`export_empty_fields`, :attr:`encoding`, :attr:"
"`indent`."
msgstr "これらの機能は、それぞれのインスタンス属性を設定する ``__init__`` メソッド引数を介して構成できます。それらは、 :attr:`fields_to_export` 、 :attr:`export_empty_fields` 、 :attr:`encoding` 、 :attr:`indent` です。"

#: ../../topics/exporters.rst:154
msgid "The *dont_fail* parameter."
msgstr "*dont_fail* パラメータ"

#: ../../topics/exporters.rst:159
msgid "Exports the given item. This method must be implemented in subclasses."
msgstr ""
"与えられたアイテムをエクスポートします。このメソッドはサブクラスで実装する必"
"要があります。"

#: ../../topics/exporters.rst:163
msgid ""
"Return the serialized value for the given field. You can override this "
"method (in your custom Item Exporters) if you want to control how a "
"particular field or value will be serialized/exported."
msgstr ""
"指定のフィールドのシリアル化された値を返します。特定のフィールドまたは値をシ"
"リアル化/エクスポートする方法を制御する場合は、カスタム・アイテム・エクスポー"
"ターでこのメソッドをオーバーライドできます。"

#: ../../topics/exporters.rst:167
msgid ""
"By default, this method looks for a serializer :ref:`declared in the item "
"field <topics-exporters-serializers>` and returns the result of applying "
"that serializer to the value. If no serializer is found, it returns the "
"value unchanged."
msgstr "デフォルトでは、このメソッドは :ref:`アイテムフィールドで宣言された <topics-exporters-serializers>` シリアライザーを検索し、そして、そのシリアライザーを値に適用した結果を返します。 シリアライザーが見つからない場合は、値を変更せずに返します。"

#: ../../topics/exporters.rst:0 ../../../scrapy/exporters.py:docstring of
#: scrapy.exporters.MarshalItemExporter:0
msgid "Parameters"
msgstr "パラメータ"

#: ../../topics/exporters.rst:172
msgid ""
"the field being serialized. If the source :ref:`item object <item-types>` "
"does not define field metadata, *field* is an empty :class:`dict`."
msgstr "シリアル化されるフィールド。 ソースの :ref:`アイテム・オブジェクト <item-types>` がフィールド・メタデータを定義していない場合、 *field* は空の辞書( :class:`dict` )です。"

#: ../../topics/exporters.rst:177
msgid "the name of the field being serialized"
msgstr "シリアル化されるフィールドの名前"

#: ../../topics/exporters.rst:180
msgid "the value being serialized"
msgstr "シリアル化される値"

#: ../../topics/exporters.rst:184
msgid ""
"Signal the beginning of the exporting process. Some exporters may use this "
"to generate some required header (for example, the :class:"
"`XmlItemExporter`). You must call this method before exporting any items."
msgstr ""
"エクスポート・プロセスの開始を通知します。一部のエクスポーターはこれを使用し"
"て、必要なヘッダー( :class:`XmlItemExporter` など)を生成します。アイテムをエ"
"クスポートする前に、このメソッドを呼び出す必要があります。"

#: ../../topics/exporters.rst:191
msgid ""
"Signal the end of the exporting process. Some exporters may use this to "
"generate some required footer (for example, the :class:`XmlItemExporter`). "
"You must always call this method after you have no more items to export."
msgstr ""
"エクスポート・プロセスの終了を通知します。一部のエクスポーターはこれを使用し"
"て、必要なフッター(たとえば、 :class:`XmlItemExporter` )を生成します。エクス"
"ポートするアイテムがなくなったら、常にこのメソッドを呼び出す必要があります。"

#: ../../topics/exporters.rst:198
msgid ""
"A list with the name of the fields that will be exported, or ``None`` if you "
"want to export all fields. Defaults to ``None``."
msgstr "エクスポートされるフィールドの名前のリスト、またはすべてのフィールドをエクスポートする場合は ``None`` 。デフォルトは ``None`` です。"

#: ../../topics/exporters.rst:201
msgid ""
"Some exporters (like :class:`CsvItemExporter`) respect the order of the "
"fields defined in this attribute."
msgstr ""
"一部のエクスポーター( :class:`CsvItemExporter` など)は、この属性で定義された"
"フィールドの順序を尊重します。"

#: ../../topics/exporters.rst:204
msgid ""
"When using :ref:`item objects <item-types>` that do not expose all their "
"possible fields, exporters that do not support exporting a different subset "
"of fields per item will only export the fields found in the first item "
"exported. Use ``fields_to_export`` to define all the fields to be exported."
msgstr "可能なすべてのフィールドを公開しない :ref:`アイテム・オブジェクト<item-types>` を使用する場合、アイテムごとに異なるサブセットのフィールドのエクスポートをサポートしないエクスポーターは、最初にエクスポートされたアイテムで見つかったフィールドのみをエクスポートします。 ``fields_to_export`` を使用して、エクスポートするすべてのフィールドを定義します。"

#: ../../topics/exporters.rst:212
msgid ""
"Whether to include empty/unpopulated item fields in the exported data. "
"Defaults to ``False``. Some exporters (like :class:`CsvItemExporter`) ignore "
"this attribute and always export all empty fields."
msgstr ""
"エクスポートされたデータに空/未入力の項目フィールドを含めるかどうか。デフォル"
"トは ``False`` です。 一部のエクスポーター( :class:`CsvItemExporter` など)は"
"この属性を無視し、常にすべての空のフィールドをエクスポートします。"

#: ../../topics/exporters.rst:216
msgid "This option is ignored for dict items."
msgstr "このオプションは、辞書アイテムでは無視されます。"

#: ../../topics/exporters.rst:220
msgid "The output character encoding."
msgstr "出力キャラクタ・エンコーディング"

#: ../../topics/exporters.rst:224
msgid ""
"Amount of spaces used to indent the output on each level. Defaults to ``0``."
msgstr ""
"各レベルで出力をインデントするために使用されるスペースの量。デフォルトは "
"``0`` です。"

#: ../../topics/exporters.rst:226
msgid ""
"``indent=None`` selects the most compact representation, all items in the "
"same line with no indentation"
msgstr ""
"``indent=None`` は、全てのアイテムを同一行にインテント無しで出力する、最もコ"
"ンパクトな表現を選択します"

#: ../../topics/exporters.rst:228
msgid "``indent<=0`` each item on its own line, no indentation"
msgstr "``indent<=0`` はアイテム毎に行を分けますが、インデントはありません"

#: ../../topics/exporters.rst:229
msgid ""
"``indent>0`` each item on its own line, indented with the provided numeric "
"value"
msgstr "``indent>0`` はアイテム毎に行を分け、指定した数値でインデントします"

#: ../../topics/exporters.rst:232
msgid "PythonItemExporter"
msgstr "PythonItemExporter"

#: ../../../scrapy/exporters.py:docstring of
#: scrapy.exporters.PythonItemExporter:1
msgid ""
"This is a base class for item exporters that extends :class:"
"`BaseItemExporter` with support for nested items."
msgstr ""
"これは、ネストされたアイテムをサポートする :class:`BaseItemExporter` を拡張す"
"るアイテム・エクスポーターの基本クラスです。"

#: ../../../scrapy/exporters.py:docstring of
#: scrapy.exporters.PythonItemExporter:4
msgid ""
"It serializes items to built-in Python types, so that any serialization "
"library (e.g. :mod:`json` or msgpack_) can be used on top of it."
msgstr ""
"アイテムをPython組み込み型にシリアル化するため、シリアル化ライブラリ(例: :"
"mod:`json` または msgpack_ )をその上で使用できます。"

#: ../../topics/exporters.rst:240
msgid "XmlItemExporter"
msgstr "XmlItemExporter"

#: ../../topics/exporters.rst:244
msgid "Exports items in XML format to the specified file object."
msgstr "指定のファイルオブジェクトにアイテムをXML形式でエクスポートします。"

#: ../../topics/exporters.rst:246 ../../topics/exporters.rst:303
#: ../../topics/exporters.rst:338 ../../topics/exporters.rst:358
#: ../../topics/exporters.rst:382 ../../topics/exporters.rst:411
msgid ""
"the file-like object to use for exporting the data. Its ``write`` method "
"should accept ``bytes`` (a disk file opened in binary mode, a ``io.BytesIO`` "
"object, etc)"
msgstr ""
"データのエクスポートに使用するファイルのようなオブジェクト。 その ``write`` "
"メソッドは ``bytes`` (バイナリ・モードで開かれたディスクファイルや、 ``io."
"BytesIO`` オブジェクトなど)を受け入れる必要があります"

#: ../../topics/exporters.rst:249
msgid "The name of root element in the exported XML."
msgstr "エクスポートされたXMLのルート要素の名前。"

#: ../../topics/exporters.rst:252
msgid "The name of each item element in the exported XML."
msgstr "エクスポートされたXMLの各アイテム要素の名前。"

#: ../../topics/exporters.rst:255 ../../topics/exporters.rst:346
#: ../../topics/exporters.rst:361
msgid ""
"The additional keyword arguments of this ``__init__`` method are passed to "
"the :class:`BaseItemExporter` ``__init__`` method."
msgstr "この ``__init__`` メソッドの追加のキーワード引数は、 :class:`BaseItemExporter` の ``__init__`` メソッドに渡されます。"

#: ../../topics/exporters.rst:258 ../../topics/exporters.rst:325
#: ../../topics/exporters.rst:364 ../../topics/exporters.rst:385
#: ../../topics/exporters.rst:414
msgid "A typical output of this exporter would be::"
msgstr "このエクスポーターの典型的な出力は次のようになります::"

#: ../../topics/exporters.rst:272
msgid ""
"Unless overridden in the :meth:`serialize_field` method, multi-valued fields "
"are exported by serializing each value inside a ``<value>`` element. This is "
"for convenience, as multi-valued fields are very common."
msgstr ""
":meth:`serialize_field` メソッドでオーバーライドされない限り、複数の値を持つ"
"フィールドは ``<value>`` 要素内の各値をシリアル化することでエクスポートされま"
"す。複数値フィールドは非常に一般的であるため、これは便宜上のものです。"

#: ../../topics/exporters.rst:276
msgid "For example, the item::"
msgstr "例えば、以下のアイテム::"

#: ../../topics/exporters.rst:280
msgid "Would be serialized as::"
msgstr "これがシリアル化されると以下のようになります::"

#: ../../topics/exporters.rst:294
msgid "CsvItemExporter"
msgstr "CsvItemExporter"

#: ../../topics/exporters.rst:298
msgid ""
"Exports items in CSV format to the given file-like object. If the :attr:"
"`fields_to_export` attribute is set, it will be used to define the CSV "
"columns and their order. The :attr:`export_empty_fields` attribute has no "
"effect on this exporter."
msgstr ""
"与えられたファイルのようなオブジェクトにCSV形式でアイテムをエクスポートしま"
"す。 :attr:`fields_to_export` 属性が設定されている場合、CSV列とその順序を定義"
"するために使用されます。 :attr:`export_empty_fields` 属性はこのエクスポーター"
"には影響しません。"

#: ../../topics/exporters.rst:306
msgid ""
"If enabled, makes the exporter output a header line with the field names "
"taken from :attr:`BaseItemExporter.fields_to_export` or the first exported "
"item fields."
msgstr ""
"有効にすると、エクスポーターは :attr:`BaseItemExporter.fields_to_export` また"
"は最初にエクスポートされたアイテム・フィールドから取得したフィールド名を含む"
"ヘッダー行を出力します。"

#: ../../topics/exporters.rst:311
msgid ""
"The char (or chars) that will be used for joining multi-valued fields, if "
"found."
msgstr "複数値フィールドを結合するために使用される単一文字(または複数の文字)。"

#: ../../topics/exporters.rst:315
msgid ""
"The optional string that specifies how encoding and decoding errors are to "
"be handled. For more information see :class:`io.TextIOWrapper`."
msgstr "エンコードおよびデコードエラーの処理方法を指定するオプションの文字列。 詳細については、 :class:`io.TextIOWrapper` を参照してください。"

#: ../../topics/exporters.rst:320
msgid ""
"The additional keyword arguments of this ``__init__`` method are passed to "
"the :class:`BaseItemExporter` ``__init__`` method, and the leftover "
"arguments to the :func:`csv.writer` function, so you can use any :func:`csv."
"writer` function argument to customize this exporter."
msgstr "この ``__init__`` メソッドの追加のキーワード引数は :class:`BaseItemExporter` の ``__init__`` メソッドに渡され、残りの引数は :func:`csv.writer` 関数に渡されるため、任意の :func:`csv.writer` 関数引数を使用してこのエクスポーターをカスタマイズできます。"

#: ../../topics/exporters.rst:332
msgid "PickleItemExporter"
msgstr "PickleItemExporter"

#: ../../topics/exporters.rst:336
msgid "Exports items in pickle format to the given file-like object."
msgstr ""
"アイテムをpickle形式で与えられたファイルのようなオブジェクトにエクスポートし"
"ます。"

#: ../../topics/exporters.rst:341
msgid "The pickle protocol to use."
msgstr "使用するpickleプロトコル。"

#: ../../topics/exporters.rst:344
msgid "For more information, see :mod:`pickle`."
msgstr "詳細については、 :mod:`pickle` を参照してください。"

#: ../../topics/exporters.rst:349
msgid ""
"Pickle isn't a human readable format, so no output examples are provided."
msgstr "pickleは人間が読める形式ではないため、出力例はありません。"

#: ../../topics/exporters.rst:352
msgid "PprintItemExporter"
msgstr "PprintItemExporter"

#: ../../topics/exporters.rst:356
msgid "Exports items in pretty print format to the specified file object."
msgstr ""
"指定のファイルオブジェクトにきれいな(pretty)印刷形式でアイテムをエクスポート"
"します。"

#: ../../topics/exporters.rst:369
msgid "Longer lines (when present) are pretty-formatted."
msgstr "長大な行の場合は綺麗に(pretty)フォーマットされます。"

#: ../../topics/exporters.rst:372
msgid "JsonItemExporter"
msgstr "JsonItemExporter"

#: ../../topics/exporters.rst:376
msgid ""
"Exports items in JSON format to the specified file-like object, writing all "
"objects as a list of objects. The additional ``__init__`` method arguments "
"are passed to the :class:`BaseItemExporter` ``__init__`` method, and the "
"leftover arguments to the :class:`~json.JSONEncoder` ``__init__`` method, so "
"you can use any :class:`~json.JSONEncoder` ``__init__`` method argument to "
"customize this exporter."
msgstr "アイテムをJSON形式で、指定のファイル様オブジェクトにエクスポートし、すべてのオブジェクトをオブジェクトのリストとして書き込みます。 追加の ``__init__`` メソッドの引数は :class:`BaseItemExporter` の ``__init__`` メソッドに渡され、残りの引数は :class:`~json.JSONEncoder` の ``__init__`` メソッドに渡されるため、あなたは任意の :class:`~json.JSONEncoder` の ``__init__`` メソッド引数を使用してこのエクスポーターをカスタマイズできます。"

#: ../../topics/exporters.rst:392
msgid ""
"JSON is very simple and flexible serialization format, but it doesn't scale "
"well for large amounts of data since incremental (aka. stream-mode) parsing "
"is not well supported (if at all) among JSON parsers (on any language), and "
"most of them just parse the entire object in memory. If you want the power "
"and simplicity of JSON with a more stream-friendly format, consider using :"
"class:`JsonLinesItemExporter` instead, or splitting the output in multiple "
"chunks."
msgstr ""
"JSONは非常にシンプルで柔軟なシリアル化形式ですが、(すべての言語で)JSONパーサ"
"間でインクリメンタル(別名ストリームモード)解析が(もしあれば)十分にサポートさ"
"れていないため、大量のデータに対して適切に拡張できません。それらのほとんど"
"は、メモリ内のオブジェクト全体を解析するだけです。よりストリーム・フレンド"
"リーな形式でJSONのパワーとシンプルさを望む場合は、代わりに :class:"
"`JsonLinesItemExporter` を使用するか、出力を複数のチャンクに分割することを検"
"討してください。"

#: ../../topics/exporters.rst:401
msgid "JsonLinesItemExporter"
msgstr "JsonLinesItemExporter"

#: ../../topics/exporters.rst:405
msgid ""
"Exports items in JSON format to the specified file-like object, writing one "
"JSON-encoded item per line. The additional ``__init__`` method arguments are "
"passed to the :class:`BaseItemExporter` ``__init__`` method, and the "
"leftover arguments to the :class:`~json.JSONEncoder` ``__init__`` method, so "
"you can use any :class:`~json.JSONEncoder` ``__init__`` method argument to "
"customize this exporter."
msgstr "アイテムをJSON形式で、指定のファイル様オブジェクトにエクスポートし、1行に1つのJSONエンコードされたアイテムを書き込みます。 追加の ``__init__`` メソッド引数は :class:`BaseItemExporter` の ``__init__`` メソッドに渡され、残りの引数は :class:`~json.JSONEncoder` の ``__init__`` メソッドに渡されるため、あなたは任意の :class:`~json.JSONEncoder` の ``__init__`` メソッド引数を使用して、このエクスポーターをカスタマイズできます。"

#: ../../topics/exporters.rst:419
msgid ""
"Unlike the one produced by :class:`JsonItemExporter`, the format produced by "
"this exporter is well suited for serializing large amounts of data."
msgstr ""
":class:`JsonItemExporter` によって生成される形式とは異なり、このエクスポー"
"ターによって生成される形式は、大量のデータをシリアル化するのに適しています。"

#: ../../topics/exporters.rst:423
msgid "MarshalItemExporter"
msgstr "MarshalItemExporter"

#: ../../../scrapy/exporters.py:docstring of
#: scrapy.exporters.MarshalItemExporter:1
msgid "Exports items in a Python-specific binary format (see :mod:`marshal`)."
msgstr ""
"Python固有のバイナリ形式でアイテムをエクスポートします( :mod:`marshal` 参"
"照)。"

#: ../../../scrapy/exporters.py:docstring of
#: scrapy.exporters.MarshalItemExporter:4
msgid ""
"The file-like object to use for exporting the data. Its ``write`` method "
"should accept :class:`bytes` (a disk file opened in binary mode, a :class:"
"`~io.BytesIO` object, etc)"
msgstr ""
"データのエクスポートに使用するファイルのようなオブジェクト。 その ``write`` "
"メソッドは :class:`bytes` (バイナリ・モードで開かれたディスク・ファイルや、 :"
"class:`~io.BytesIO` オブジェクトなど)を受け入れる必要があります"
