# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008–2018, Scrapy developers
# This file is distributed under the same license as the Scrapy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Scrapy \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-10 01:26+0900\n"
"PO-Revision-Date: 2019-10-08 08:48+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0\n"
"Generated-By: Babel 2.7.0\n"

#: ../../topics/link-extractors.rst:5
msgid "Link Extractors"
msgstr "リンク抽出器(extractor)"

#: ../../topics/link-extractors.rst:7
msgid "A link extractor is an object that extracts links from responses."
msgstr ""

#: ../../topics/link-extractors.rst:9
msgid ""
"The ``__init__`` method of :class:`~scrapy.linkextractors.lxmlhtml."
"LxmlLinkExtractor` takes settings that determine which links may be "
"extracted. :class:`LxmlLinkExtractor.extract_links <scrapy.linkextractors."
"lxmlhtml.LxmlLinkExtractor.extract_links>` returns a list of matching :class:"
"`~scrapy.link.Link` objects from a :class:`~scrapy.http.Response` object."
msgstr ""

#: ../../topics/link-extractors.rst:16
msgid ""
"Link extractors are used in :class:`~scrapy.spiders.CrawlSpider` spiders "
"through a set of :class:`~scrapy.spiders.Rule` objects."
msgstr ""

#: ../../topics/link-extractors.rst:19
msgid ""
"You can also use link extractors in regular spiders. For example, you can "
"instantiate :class:`LinkExtractor <scrapy.linkextractors.lxmlhtml."
"LxmlLinkExtractor>` into a class variable in your spider, and use it from "
"your spider callbacks::"
msgstr ""

#: ../../topics/link-extractors.rst:30
#, fuzzy
#| msgid "Built-in link extractors reference"
msgid "Link extractor reference"
msgstr "組み込みリンク抽出器リファレンス"

#: ../../topics/link-extractors.rst:35
msgid ""
"The link extractor class is :class:`scrapy.linkextractors.lxmlhtml."
"LxmlLinkExtractor`. For convenience it can also be imported as ``scrapy."
"linkextractors.LinkExtractor``::"
msgstr ""

#: ../../topics/link-extractors.rst:42
msgid "LxmlLinkExtractor"
msgstr "LxmlLinkExtractor"

#: ../../topics/link-extractors.rst:50
msgid ""
"LxmlLinkExtractor is the recommended link extractor with handy filtering "
"options. It is implemented using lxml's robust HTMLParser."
msgstr ""
"LxmlLinkExtractorは、便利なフィルタリングオプションを備えた、おすすめのリンク"
"抽出器です。lxmlの堅牢なHTMLParserを使用して実装されています。"

#: ../../topics/link-extractors.rst:0 ../../../scrapy/link.py:docstring of
#: scrapy.link.Link:0
msgid "Parameters"
msgstr ""

#: ../../topics/link-extractors.rst:53
msgid ""
"a single regular expression (or list of regular expressions) that the "
"(absolute) urls must match in order to be extracted. If not given (or "
"empty), it will match all links."
msgstr ""
"(絶対)URLが抽出されるために一致する必要がある単一の正規表現(または正規表現の"
"リスト)。指定しない場合(または空の場合)は、すべてのリンクに一致します。"

#: ../../topics/link-extractors.rst:58
#, fuzzy
#| msgid ""
#| "a single regular expression (or list of regular expressions) that the "
#| "(absolute) urls must match in order to be excluded (ie. not extracted). "
#| "It has precedence over the ``allow`` parameter. If not given (or empty) "
#| "it won't exclude any links."
msgid ""
"a single regular expression (or list of regular expressions) that the "
"(absolute) urls must match in order to be excluded (i.e. not extracted). It "
"has precedence over the ``allow`` parameter. If not given (or empty) it "
"won't exclude any links."
msgstr ""
"(絶対)URLが除外される(抽出されない)ために一致する必要がある単一の正規表現(ま"
"たは正規表現のリスト)。 ``allow`` パラメータよりも優先されます。指定されてい"
"ない(または空の)場合、リンクは除外されません。"

#: ../../topics/link-extractors.rst:64
msgid ""
"a single value or a list of string containing domains which will be "
"considered for extracting the links"
msgstr ""
"リンクを抽出するために考慮されるドメインを含む単一の値または文字列のリスト"

#: ../../topics/link-extractors.rst:68
msgid ""
"a single value or a list of strings containing domains which won't be "
"considered for extracting the links"
msgstr ""
"リンクを抽出するために **考慮されない** ドメインを含む単一の値または文字列の"
"リスト"

#: ../../topics/link-extractors.rst:72
#, fuzzy
#| msgid ""
#| "a single value or list of strings containing extensions that should be "
#| "ignored when extracting links. If not given, it will default to the "
#| "``IGNORED_EXTENSIONS`` list defined in the `scrapy.linkextractors`_ "
#| "package."
msgid ""
"a single value or list of strings containing extensions that should be "
"ignored when extracting links. If not given, it will default to :data:"
"`scrapy.linkextractors.IGNORED_EXTENSIONS`.  .. versionchanged:: 2.0    :"
"data:`~scrapy.linkextractors.IGNORED_EXTENSIONS` now includes    ``7z``, "
"``7zip``, ``apk``, ``bz2``, ``cdr``, ``dmg``, ``ico``,    ``iso``, ``tar``, "
"``tar.gz``, ``webm``, and ``xz``."
msgstr ""
"リンクを抽出するときに無視される拡張子を含む単一の値または文字列のリスト。 指"
"定しない場合、 `scrapy.linkextractors`_ パッケージで定義された "
"``IGNORED_EXTENSIONS`` リストがデフォルトになります。"

#: ../../topics/link-extractors.rst:72
#, fuzzy
#| msgid ""
#| "a single value or list of strings containing extensions that should be "
#| "ignored when extracting links. If not given, it will default to the "
#| "``IGNORED_EXTENSIONS`` list defined in the `scrapy.linkextractors`_ "
#| "package."
msgid ""
"a single value or list of strings containing extensions that should be "
"ignored when extracting links. If not given, it will default to :data:"
"`scrapy.linkextractors.IGNORED_EXTENSIONS`."
msgstr ""
"リンクを抽出するときに無視される拡張子を含む単一の値または文字列のリスト。 指"
"定しない場合、 `scrapy.linkextractors`_ パッケージで定義された "
"``IGNORED_EXTENSIONS`` リストがデフォルトになります。"

#: ../../topics/link-extractors.rst:77
msgid ""
":data:`~scrapy.linkextractors.IGNORED_EXTENSIONS` now includes ``7z``, "
"``7zip``, ``apk``, ``bz2``, ``cdr``, ``dmg``, ``ico``, ``iso``, ``tar``, "
"``tar.gz``, ``webm``, and ``xz``."
msgstr ""

#: ../../topics/link-extractors.rst:83
msgid ""
"is an XPath (or list of XPath's) which defines regions inside the response "
"where links should be extracted from. If given, only the text selected by "
"those XPath will be scanned for links. See examples below."
msgstr ""
"これは、リンクを抽出するレスポンス内の領域を定義するXPath(またはXPathのリス"
"ト)です。指定すると、それらのXPathによって選択されたテキストのみがリンクをス"
"キャンされます。以下の例を参照してください。"

#: ../../topics/link-extractors.rst:89
msgid ""
"a CSS selector (or list of selectors) which defines regions inside the "
"response where links should be extracted from. Has the same behaviour as "
"``restrict_xpaths``."
msgstr ""
"リンクを抽出するレスポンス内の領域を定義するCSSセレクター(またはセレクターの"
"リスト)。 ``restrict_xpaths`` と同じ動作をします。"

#: ../../topics/link-extractors.rst:94
msgid ""
"a single regular expression (or list of regular expressions) that the link's "
"text must match in order to be extracted. If not given (or empty), it will "
"match all links. If a list of regular expressions is given, the link will be "
"extracted if it matches at least one."
msgstr ""
"リンクのテキストが抽出されるために一致する必要がある単一の正規表現(または正規"
"表現のリスト)。指定しない場合(または空の場合)は、すべてのリンクに一致します。"
"正規表現のリストが指定されている場合、リンクが少なくとも1つと一致するとリンク"
"が抽出されます。"

#: ../../topics/link-extractors.rst:100
msgid ""
"a tag or a list of tags to consider when extracting links. Defaults to "
"``('a', 'area')``."
msgstr ""
"リンクを抽出するときに考慮するタグまたはタグのリスト。 デフォルトは ``('a', "
"'area')`` です。"

#: ../../topics/link-extractors.rst:104
msgid ""
"an attribute or list of attributes which should be considered when looking "
"for links to extract (only for those tags specified in the ``tags`` "
"parameter). Defaults to ``('href',)``"
msgstr ""
"抽出するリンクを探すときに考慮する必要がある属性または属性のリスト( ``tags`` "
"パラメータで指定されたタグのみ)。デフォルトは ``('href',)``"

#: ../../topics/link-extractors.rst:109
msgid ""
"canonicalize each extracted url (using w3lib.url.canonicalize_url). Defaults "
"to ``False``. Note that canonicalize_url is meant for duplicate checking; it "
"can change the URL visible at server side, so the response can be different "
"for requests with canonicalized and raw URLs. If you're using LinkExtractor "
"to follow links it is more robust to keep the default ``canonicalize=False``."
msgstr ""
"抽出された各URLを正規化します(w3lib.url.canonicalize_urlを使用)。 デフォルト"
"は ``False`` です。canonicalize_urlは重複チェックを目的としていることに注意し"
"てください。サーバー側で表示されるURLを変更できるため、正規化されたURLと生の"
"URLを使用したリクエストのレスポンスが異なる場合があります。LinkExtractorを使"
"用してリンクをたどっている場合、デフォルトの ``canonicalize=False`` のままに"
"しておいた方がより堅牢です。"

#: ../../topics/link-extractors.rst:118
msgid "whether duplicate filtering should be applied to extracted links."
msgstr "抽出されたリンクに重複フィルタリングを適用するかどうか。"

#: ../../topics/link-extractors.rst:122
msgid ""
"a function which receives each value extracted from the tag and attributes "
"scanned and can modify the value and return a new one, or return ``None`` to "
"ignore the link altogether. If not given, ``process_value`` defaults to "
"``lambda x: x``.  .. highlight:: html  For example, to extract links from "
"this code::      <a href=\"javascript:goToPage('../other/page.html'); return "
"false\">Link text</a>  .. highlight:: python  You can use the following "
"function in ``process_value``::      def process_value(value):         m = "
"re.search(\"javascript:goToPage\\('(.*?)'\", value)         if "
"m:             return m.group(1)"
msgstr " "

#: ../../topics/link-extractors.rst:122
msgid ""
"a function which receives each value extracted from the tag and attributes "
"scanned and can modify the value and return a new one, or return ``None`` to "
"ignore the link altogether. If not given, ``process_value`` defaults to "
"``lambda x: x``."
msgstr ""
"タグから抽出された各値とスキャンされた属性を受け取り、値を変更して新しい値を"
"返すか、リンクを完全に無視するために ``None`` を返すことができる関数。 指定し"
"ない場合、 ``process_value`` のデフォルトは ``lambda x: x`` になります。"

#: ../../topics/link-extractors.rst:129
msgid "For example, to extract links from this code::"
msgstr "たとえば、このコードからリンクを抽出するには::"

#: ../../topics/link-extractors.rst:135
msgid "You can use the following function in ``process_value``::"
msgstr "あなたは ``process_value`` で次の関数を使用できます::"

#: ../../topics/link-extractors.rst:144
msgid ""
"whether to strip whitespaces from extracted attributes. According to HTML5 "
"standard, leading and trailing whitespaces must be stripped from ``href`` "
"attributes of ``<a>``, ``<area>`` and many other elements, ``src`` attribute "
"of ``<img>``, ``<iframe>`` elements, etc., so LinkExtractor strips space "
"chars by default. Set ``strip=False`` to turn it off (e.g. if you're "
"extracting urls from elements or attributes which allow leading/trailing "
"whitespaces)."
msgstr ""
"抽出された属性から空白を削除するかどうか。HTML5標準によれば、先頭と末尾の空白"
"は、``<a>`` や ``<area>`` の ``href`` 属性や他の多くの要素、 ``<img>`` や "
"``<iframe>`` の ``src`` 属性、などから削除する必要があります。そのため"
"LinkExtractorはデフォルトでスペース文字を削除します。オフにするには "
"``strip=False`` を設定します(たとえば、先頭または末尾の空白を許可する要素また"
"は属性からURLを抽出する場合)。"

#: ../../../scrapy/linkextractors/lxmlhtml.py:docstring of
#: scrapy.linkextractors.lxmlhtml.LxmlLinkExtractor.extract_links:1
msgid ""
"Returns a list of :class:`~scrapy.link.Link` objects from the specified :"
"class:`response <scrapy.http.Response>`."
msgstr ""

#: ../../../scrapy/linkextractors/lxmlhtml.py:docstring of
#: scrapy.linkextractors.lxmlhtml.LxmlLinkExtractor.extract_links:4
msgid ""
"Only links that match the settings passed to the ``__init__`` method of the "
"link extractor are returned."
msgstr ""

#: ../../../scrapy/linkextractors/lxmlhtml.py:docstring of
#: scrapy.linkextractors.lxmlhtml.LxmlLinkExtractor.extract_links:7
msgid "Duplicate links are omitted."
msgstr ""

#: ../../topics/link-extractors.rst:156
msgid "Link"
msgstr ""

#: ../../../scrapy/link.py:docstring of scrapy.link.Link:1
msgid "Link objects represent an extracted link by the LinkExtractor."
msgstr ""

#: ../../../scrapy/link.py:docstring of scrapy.link.Link:3
msgid "Using the anchor tag sample below to illustrate the parameters::"
msgstr ""

#: ../../../scrapy/link.py:docstring of scrapy.link.Link:7
msgid ""
"the absolute url being linked to in the anchor tag. From the sample, this is "
"``https://example.com/nofollow.html``."
msgstr ""

#: ../../../scrapy/link.py:docstring of scrapy.link.Link:10
msgid ""
"the text in the anchor tag. From the sample, this is ``Dont follow this "
"one``."
msgstr ""

#: ../../../scrapy/link.py:docstring of scrapy.link.Link:12
msgid ""
"the part of the url after the hash symbol. From the sample, this is ``foo``."
msgstr ""

#: ../../../scrapy/link.py:docstring of scrapy.link.Link:14
msgid ""
"an indication of the presence or absence of a nofollow value in the ``rel`` "
"attribute of the anchor tag."
msgstr ""

#~ msgid ""
#~ "Link extractors are objects whose only purpose is to extract links from "
#~ "web pages (:class:`scrapy.http.Response` objects) which will be "
#~ "eventually followed."
#~ msgstr ""
#~ "リンク抽出器(link extractor)は、最終的に追跡されるWebページ( :class:"
#~ "`scrapy.http.Response` オブジェクト)からリンクを抽出することを唯一の目的と"
#~ "するオブジェクトです。"

#~ msgid ""
#~ "There is ``scrapy.linkextractors.LinkExtractor`` available in Scrapy, but "
#~ "you can create your own custom Link Extractors to suit your needs by "
#~ "implementing a simple interface."
#~ msgstr ""
#~ "Scrapyには ``scrapy.linkextractors.LinkExtractor`` がありますが、シンプル"
#~ "なインターフェースを実装することで、ニーズに合わせて独自のカスタム・リンク"
#~ "抽出器を作成できます。"

#~ msgid ""
#~ "The only public method that every link extractor has is "
#~ "``extract_links``, which receives a :class:`~scrapy.http.Response` object "
#~ "and returns a list of :class:`scrapy.link.Link` objects. Link extractors "
#~ "are meant to be instantiated once and their ``extract_links`` method "
#~ "called several times with different responses to extract links to follow."
#~ msgstr ""
#~ "すべてのリンク抽出器が持つ唯一のパブリック・メソッドは ``extract_links`` "
#~ "で、これは :class:`~scrapy.http.Response` オブジェクトを受け取り、 :class:"
#~ "`scrapy.link.Link` オブジェクトのリストを返します。リンク抽出器は一度イン"
#~ "スタンス化され、それらの ``extract_links`` メソッドが異なるレスポンスで数"
#~ "回呼び出されて、追跡するリンクを抽出します。"

#~ msgid ""
#~ "Link extractors are used in the :class:`~scrapy.spiders.CrawlSpider` "
#~ "class (available in Scrapy), through a set of rules, but you can also use "
#~ "it in your spiders, even if you don't subclass from :class:`~scrapy."
#~ "spiders.CrawlSpider`, as its purpose is very simple: to extract links."
#~ msgstr ""
#~ "リンク抽出器は、(Scrapyに用意されている) :class:`~scrapy.spiders."
#~ "CrawlSpider` クラスで一連のルールを介して使用されますが、 :class:`~scrapy."
#~ "spiders.CrawlSpider` サブクラスを作成しなくても、スパイダーでも使用できま"
#~ "す。"

#~ msgid ""
#~ "Link extractors classes bundled with Scrapy are provided in the :mod:"
#~ "`scrapy.linkextractors` module."
#~ msgstr ""
#~ "Scrapyに同梱されているリンク抽出器クラスは、 :mod:`scrapy.linkextractors` "
#~ "モジュールで提供されます。"

#~ msgid ""
#~ "The default link extractor is ``LinkExtractor``, which is the same as :"
#~ "class:`~.LxmlLinkExtractor`::"
#~ msgstr ""
#~ "デフォルトのリンク抽出器は ``LinkExtractor`` で、これは :class:`~."
#~ "LxmlLinkExtractor` と同じです::"

#~ msgid ""
#~ "There used to be other link extractor classes in previous Scrapy "
#~ "versions, but they are deprecated now."
#~ msgstr ""
#~ "以前のScrapyバージョンには他のリンク抽出器クラスがありましたが、現在は廃止"
#~ "されています。"

#~ msgid "パラメータ"
#~ msgstr "パラメータ"
