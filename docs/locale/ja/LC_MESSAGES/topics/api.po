# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008–2018, Scrapy developers
# This file is distributed under the same license as the Scrapy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Scrapy \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-10 01:26+0900\n"
"PO-Revision-Date: 2021-04-24 10:04+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../topics/api.rst:5
msgid "Core API"
msgstr "コアAPI"

#: ../../topics/api.rst:7
msgid ""
"This section documents the Scrapy core API, and it's intended for developers "
"of extensions and middlewares."
msgstr ""
"この節は、ScrapyコアAPIについて説明します。これは、拡張機能とミドルウェアの開"
"発者を対象としています。"

#: ../../topics/api.rst:13
msgid "Crawler API"
msgstr "クローラーAPI"

#: ../../topics/api.rst:15
msgid ""
"The main entry point to Scrapy API is the :class:`~scrapy.crawler.Crawler` "
"object, passed to extensions through the ``from_crawler`` class method. This "
"object provides access to all Scrapy core components, and it's the only way "
"for extensions to access them and hook their functionality into Scrapy."
msgstr ""
"Scrapy APIの主要なエントリポイントは、 ``from_crawler`` クラス・メソッドを通"
"じて拡張機能に渡される :class:`~scrapy.crawler.Crawler` オブジェクトです。 こ"
"のオブジェクトは、すべてのScrapyコア・コンポーネントへのアクセスを提供し、拡"
"張機能がそれらにアクセスし、その機能をScrapyにフックする唯一の方法です。"

#: ../../topics/api.rst:23
msgid ""
"The Extension Manager is responsible for loading and keeping track of "
"installed extensions and it's configured through the :setting:`EXTENSIONS` "
"setting which contains a dictionary of all available extensions and their "
"order similar to how you :ref:`configure the downloader middlewares <topics-"
"downloader-middleware-setting>`."
msgstr ""
"拡張機能マネージャーは、インストールされた拡張機能を読み込んで追跡する責任が"
"あり、利用可能な全ての拡張機能の辞書と、 :ref:`ダウンローダー・ミドルウェアの"
"構成(configure)<topics-downloader-middleware-setting>` 方法と類似した順序を含"
"む :setting:`EXTENSIONS` 設定で構成(configure)されます。"

#: ../../topics/api.rst:31
msgid ""
"The Crawler object must be instantiated with a :class:`scrapy.spiders."
"Spider` subclass and a :class:`scrapy.settings.Settings` object."
msgstr ""
"Crawlerオブジェクトは、 :class:`scrapy.spiders.Spider` のサブクラスと :class:"
"`scrapy.settings.Settings` オブジェクトでインスタンス化する必要があります。"

#: ../../topics/api.rst:37
msgid "The settings manager of this crawler."
msgstr "このクローラーの設定マネージャ"

#: ../../topics/api.rst:39
msgid ""
"This is used by extensions & middlewares to access the Scrapy settings of "
"this crawler."
msgstr ""
"これは、拡張機能とミドルウェアがこのクローラーのScrapy設定にアクセスするため"
"に使用します。"

#: ../../topics/api.rst:42
msgid "For an introduction on Scrapy settings see :ref:`topics-settings`."
msgstr ""
"Scrapy設定の概要については、:ref:`topics-settings` を参照してください。"

#: ../../topics/api.rst:44
msgid "For the API see :class:`~scrapy.settings.Settings` class."
msgstr ""
"APIについては、 :class:`~scrapy.settings.Settings` クラスを参照してください。"

#: ../../topics/api.rst:48
msgid "The signals manager of this crawler."
msgstr "このクローラーのシグナル・マネージャ"

#: ../../topics/api.rst:50
msgid ""
"This is used by extensions & middlewares to hook themselves into Scrapy "
"functionality."
msgstr ""
"これは、拡張機能およびミドルウェアがScrapy機能にフックするために使用されま"
"す。"

#: ../../topics/api.rst:53
msgid "For an introduction on signals see :ref:`topics-signals`."
msgstr "シグナルの概要については、 :ref:`topics-signals` を参照してください。"

#: ../../topics/api.rst:55
msgid "For the API see :class:`~scrapy.signalmanager.SignalManager` class."
msgstr ""
"APIについては、 :class:`~scrapy.signalmanager.SignalManager` クラスを参照して"
"ください。"

#: ../../topics/api.rst:59
msgid "The stats collector of this crawler."
msgstr "このクローラーの統計収集器"

#: ../../topics/api.rst:61
msgid ""
"This is used from extensions & middlewares to record stats of their "
"behaviour, or access stats collected by other extensions."
msgstr ""
"これは拡張機能とミドルウェアから使用され、その動作の統計を記録したり、他の拡"
"張機能によって収集された統計にアクセスしたりします。"

#: ../../topics/api.rst:64
msgid "For an introduction on stats collection see :ref:`topics-stats`."
msgstr "統計収集器の概要は :ref:`topics-stats` を参照下さい。"

#: ../../topics/api.rst:66
msgid "For the API see :class:`~scrapy.statscollectors.StatsCollector` class."
msgstr ""
"APIについては :class:`~scrapy.statscollectors.StatsCollector` クラス参照。"

#: ../../topics/api.rst:70
msgid "The extension manager that keeps track of enabled extensions."
msgstr "有効な拡張機能を追跡(track)する拡張機能マネージャ"

#: ../../topics/api.rst:72
msgid "Most extensions won't need to access this attribute."
msgstr "ほとんどの拡張機能は、この属性にアクセスする必要はありません。"

#: ../../topics/api.rst:74
msgid ""
"For an introduction on extensions and a list of available extensions on "
"Scrapy see :ref:`topics-extensions`."
msgstr ""
"拡張機能の紹介と、Scrapyで利用可能な拡張機能のリストについては、 :ref:"
"`topics-extensions` を参照してください。"

#: ../../topics/api.rst:79
msgid ""
"The execution engine, which coordinates the core crawling logic between the "
"scheduler, downloader and spiders."
msgstr ""
"スケジューラ、ダウンローダー、スパイダーの間のコア・クロール・ロジックを調整"
"する実行エンジン。"

#: ../../topics/api.rst:82
msgid ""
"Some extension may want to access the Scrapy engine, to inspect  or modify "
"the downloader and scheduler behaviour, although this is an advanced use and "
"this API is not yet stable."
msgstr ""
"一部の拡張機能では、Scrapyエンジンにアクセスして、ダウンローダーとスケジュー"
"ラの動作を検査または変更することができますが、これは高度な使用方法であり、こ"
"のAPIはまだ安定していません。"

#: ../../topics/api.rst:88
msgid ""
"Spider currently being crawled. This is an instance of the spider class "
"provided while constructing the crawler, and it is created after the "
"arguments given in the :meth:`crawl` method."
msgstr ""
"現在スパイダーがクロールされています。これはクローラーの構築中に提供されるス"
"パイダー・クラスのインスタンスであり、 :meth:`crawl` メソッドで指定された引数"
"の後に作成されます。"

#: ../../topics/api.rst:94
msgid ""
"Starts the crawler by instantiating its spider class with the given ``args`` "
"and ``kwargs`` arguments, while setting the execution engine in motion."
msgstr ""
"指定された ``args`` 引数と ``kwargs`` 引数を使用してスパイダー・クラスをイン"
"スタンス化することでクローラーを起動し、実行エンジンを起動します。"

#: ../../topics/api.rst:98
msgid "Returns a deferred that is fired when the crawl is finished."
msgstr "クロールが終了したときに起動される遅延オブジェクトを返します。"

#: ../../topics/api.rst:113
msgid "Settings API"
msgstr "APIの設定"

#: ../../topics/api.rst:120
msgid ""
"Dictionary that sets the key name and priority level of the default settings "
"priorities used in Scrapy."
msgstr ""
"Scrapyで使用されるデフォルト設定の優先度のキー名と優先度を設定する辞書。"

#: ../../topics/api.rst:123
msgid ""
"Each item defines a settings entry point, giving it a code name for "
"identification and an integer priority. Greater priorities take more "
"precedence over lesser ones when setting and retrieving values in the :class:"
"`~scrapy.settings.Settings` class."
msgstr ""
"各項目は設定エントリ・ポイントを定義し、識別のためのコード名と整数の優先度を"
"与えます。 :class:`~scrapy.settings.Settings` クラスで値を設定および取得する"
"場合、優先順位が高いほど順番値が小さくなります。"

#: ../../topics/api.rst:140
msgid ""
"For a detailed explanation on each settings sources, see: :ref:`topics-"
"settings`."
msgstr ""
"各設定ソースの詳細な説明については、 :ref:`topics-settings` を参照してくださ"
"い。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.get_settings_priority:1
msgid ""
"Small helper function that looks up a given string priority in the :attr:"
"`~scrapy.settings.SETTINGS_PRIORITIES` dictionary and returns its numerical "
"value, or directly returns a given numerical priority."
msgstr ""
":attr:`~scrapy.settings.SETTINGS_PRIORITIES` 辞書で特定の文字列優先度を検索"
"し、その数値を返す、または特定の数値優先度を直接返す小さなヘルパー関数。"

#: ../../../scrapy/settings/__init__.py:docstring of scrapy.settings.Settings:1
msgid "Bases: :class:`scrapy.settings.BaseSettings`"
msgstr "ベースクラス: :class:`scrapy.settings.BaseSettings`"

#: ../../../scrapy/settings/__init__.py:docstring of scrapy.settings.Settings:1
msgid ""
"This object stores Scrapy settings for the configuration of internal "
"components, and can be used for any further customization."
msgstr ""
"このオブジェクトは、内部コンポーネントの構成のためのScrapy設定を保存し、さら"
"にカスタマイズするために使用できます。"

#: ../../../scrapy/settings/__init__.py:docstring of scrapy.settings.Settings:4
msgid ""
"It is a direct subclass and supports all methods of :class:`~scrapy.settings."
"BaseSettings`. Additionally, after instantiation of this class, the new "
"object will have the global default settings described on :ref:`topics-"
"settings-ref` already populated."
msgstr ""
"これは直接のサブクラスであり、 :class:`~scrapy.settings.BaseSettings` のすべ"
"てのメソッドをサポートします。さらに、このクラスのインスタンス化の後、新しい"
"オブジェクトには、すでに入力されている、 :ref:`topics-settings-ref` で説明さ"
"れているグローバルなデフォルト設定が含まれます。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings:1
msgid ""
"Instances of this class behave like dictionaries, but store priorities along "
"with their ``(key, value)`` pairs, and can be frozen (i.e. marked immutable)."
msgstr ""
"このクラスのインスタンスは辞書のように動作しますが、 ``(key, value)`` ペアと"
"ともに優先度を保存し、凍結することができます(つまり、不変(immutable)とマーク"
"されます)。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings:5
msgid ""
"Key-value entries can be passed on initialization with the ``values`` "
"argument, and they would take the ``priority`` level (unless ``values`` is "
"already an instance of :class:`~scrapy.settings.BaseSettings`, in which case "
"the existing priority levels will be kept).  If the ``priority`` argument is "
"a string, the priority name will be looked up in :attr:`~scrapy.settings."
"SETTINGS_PRIORITIES`. Otherwise, a specific integer should be provided."
msgstr ""
"キー値エントリは初期化時に ``values`` 引数で渡すことができ、それらは "
"``priority`` レベルを取ります( ``values`` がすでに :class:`~scrapy.settings."
"BaseSettings` のインスタンスである場合を除き。その場合、既存の優先度レベルが"
"保持されます)。 ``priority`` 引数が文字列の場合、優先度名は :attr:`~scrapy."
"settings.SETTINGS_PRIORITIES` で検索されます。それ以外の場合は、特定の整数を"
"指定する必要があります。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings:13
msgid ""
"Once the object is created, new settings can be loaded or updated with the :"
"meth:`~scrapy.settings.BaseSettings.set` method, and can be accessed with "
"the square bracket notation of dictionaries, or with the :meth:`~scrapy."
"settings.BaseSettings.get` method of the instance and its value conversion "
"variants. When requesting a stored key, the value with the highest priority "
"will be retrieved."
msgstr ""
"オブジェクトが作成されると、新しい設定は :meth:`~scrapy.settings."
"BaseSettings.set` メソッドを使用してロードまたは更新でき、辞書の角括弧表記ま"
"たは :meth:`~scrapy.settings.BaseSettings.get` メソッドとその値変換variantを"
"使用してアクセスできます。保存されたキーを要求すると、最高の優先度を持つ値が"
"取得されます。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.copy:1
msgid "Make a deep copy of current settings."
msgstr "現在の設定のdeepコピーを作成します。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.copy:3
msgid ""
"This method returns a new instance of the :class:`Settings` class, populated "
"with the same values and their priorities."
msgstr ""
"このメソッドは、 :class:`Settings` クラスの新しいインスタンスを返し、同じ値と"
"その優先度が入力されます。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.copy:6
msgid ""
"Modifications to the new object won't be reflected on the original settings."
msgstr "新しいオブジェクトへの変更は、元の設定には反映されません。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.copy_to_dict:1
msgid "Make a copy of current settings and convert to a dict."
msgstr "現在の設定のコピーを作成し、辞書に変換します。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.copy_to_dict:3
msgid ""
"This method returns a new dict populated with the same values and their "
"priorities as the current settings."
msgstr ""
"このメソッドは、現在の設定と同じ値とそれらの優先度が設定された新しい辞書を返"
"します。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.copy_to_dict:6
msgid ""
"Modifications to the returned dict won't be reflected on the original "
"settings."
msgstr "返された辞書への変更は、元の設定には反映されません。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.copy_to_dict:9
msgid ""
"This method can be useful for example for printing settings in Scrapy shell."
msgstr "このメソッドは、Scrapyシェルの印刷(printing)設定などに役立ちます。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.freeze:1
msgid "Disable further changes to the current settings."
msgstr "現在の設定への、さらなる変更を無効にします。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.freeze:3
msgid ""
"After calling this method, the present state of the settings will become "
"immutable. Trying to change values through the :meth:`~set` method and its "
"variants won't be possible and will be alerted."
msgstr ""
"このメソッドを呼び出した後、設定の現在の状態は不変(immutable)になります。 ::"
"meth:`~set` メソッドとその変形(variant)を使用して値を変更しようとすることは不"
"可能であり、警告されます。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.frozencopy:1
msgid "Return an immutable copy of the current settings."
msgstr "現在の設定の不変(immutable)のコピーを返します。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.frozencopy:3
msgid ""
"Alias for a :meth:`~freeze` call in the object returned by :meth:`copy`."
msgstr ""
":meth:`copy` によって返されるオブジェクトの :meth:`~freeze` 呼び出しのエイリ"
"アス。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.get:1
msgid "Get a setting value without affecting its original type."
msgstr "元のタイプに影響を与えずに設定値を取得します。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.get:0 scrapy.settings.BaseSettings.getbool:0
#: scrapy.settings.BaseSettings.getdict:0
#: scrapy.settings.BaseSettings.getfloat:0
#: scrapy.settings.BaseSettings.getint:0 scrapy.settings.BaseSettings.getlist:0
#: scrapy.settings.BaseSettings.getpriority:0
#: scrapy.settings.BaseSettings.getwithbase:0
#: scrapy.settings.BaseSettings.set:0 scrapy.settings.BaseSettings.setmodule:0
#: scrapy.settings.BaseSettings.update:0 ../../topics/api.rst:0
msgid "Parameters"
msgstr "パラメータ"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.get:3 scrapy.settings.BaseSettings.getbool:9
#: scrapy.settings.BaseSettings.getdict:9
#: scrapy.settings.BaseSettings.getfloat:3
#: scrapy.settings.BaseSettings.getint:3 scrapy.settings.BaseSettings.getlist:7
#: scrapy.settings.BaseSettings.getpriority:4
#: scrapy.settings.BaseSettings.set:7
msgid "the setting name"
msgstr "設定名"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.get:6 scrapy.settings.BaseSettings.getbool:12
#: scrapy.settings.BaseSettings.getdict:12
#: scrapy.settings.BaseSettings.getfloat:6
#: scrapy.settings.BaseSettings.getint:6
#: scrapy.settings.BaseSettings.getlist:10
msgid "the value to return if no setting is found"
msgstr "設定が見つからない場合に返す値"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.getbool:1
msgid "Get a setting value as a boolean."
msgstr "設定値をブール値として取得します。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.getbool:3
msgid ""
"``1``, ``'1'``, `True`` and ``'True'`` return ``True``, while ``0``, "
"``'0'``, ``False``, ``'False'`` and ``None`` return ``False``."
msgstr ""
"``1`` と ``'1'`` と `True`` と ``'True'`` は ``True`` を返しますが、 ``0`` "
"と ``'0'`` と ``False`` と ``'False'`` と ``None`` は ``False`` を返します。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.getbool:6
msgid ""
"For example, settings populated through environment variables set to ``'0'`` "
"will return ``False`` when using this method."
msgstr ""
"たとえば、 ``'0'``に設定された環境変数を通じて設定された設定は、このメソッド"
"を使用するときに ``False`` を返します。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.getdict:1
msgid ""
"Get a setting value as a dictionary. If the setting original type is a "
"dictionary, a copy of it will be returned. If it is a string it will be "
"evaluated as a JSON dictionary. In the case that it is a :class:`~scrapy."
"settings.BaseSettings` instance itself, it will be converted to a "
"dictionary, containing all its current settings values as they would be "
"returned by :meth:`~scrapy.settings.BaseSettings.get`, and losing all "
"information about priority and mutability."
msgstr ""
"辞書として設定値を取得します。 設定元のタイプが辞書の場合、そのコピーが返され"
"ます。文字列の場合、JSON辞書として評価されます。それ自体が :class:`~scrapy."
"settings.BaseSettings` インスタンスである場合、それは辞書に変換され、 :meth:"
"`~scrapy.settings.BaseSettings.get` によって返される現在の設定値をすべて含"
"み、優先度(priority)と可変性(mutability)に関するすべての情報を失います。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.getfloat:1
msgid "Get a setting value as a float."
msgstr "設定値をfloatとして取得します。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.getint:1
msgid "Get a setting value as an int."
msgstr "設定値をintとして取得します。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.getlist:1
msgid ""
"Get a setting value as a list. If the setting original type is a list, a "
"copy of it will be returned. If it's a string it will be split by \",\"."
msgstr ""
"設定値をリストとして取得します。 設定元のタイプはリストであり、そのコピーが返"
"されます。 文字列の場合、\",\"で分割されます。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.getlist:4
msgid ""
"For example, settings populated through environment variables set to ``'one,"
"two'`` will return a list ['one', 'two'] when using this method."
msgstr ""
"たとえば、 ``'one,two'`` に設定された環境変数を通じて設定された設定は、このメ"
"ソッドを使用するときにリスト ['one', 'two'] を返します。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.getpriority:1
msgid ""
"Return the current numerical priority value of a setting, or ``None`` if the "
"given ``name`` does not exist."
msgstr ""
"設定の現在の数値優先順位値を返します。指定された ``name`` が存在しない場合は "
"``None`` を返します。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.getwithbase:1
msgid ""
"Get a composition of a dictionary-like setting and its `_BASE` counterpart."
msgstr "辞書のような設定と、それに対応する `_BASE` の合成を取得します。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.getwithbase:4
msgid "name of the dictionary-like setting"
msgstr "辞書風設定の名前"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.maxpriority:1
msgid ""
"Return the numerical value of the highest priority present throughout all "
"settings, or the numerical value for ``default`` from :attr:`~scrapy."
"settings.SETTINGS_PRIORITIES` if there are no settings stored."
msgstr ""
"すべての設定を通して存在する最も高い優先度の数値を返します。設定が保存されて"
"いない場合は、 :attr:`~scrapy.settings.SETTINGS_PRIORITIES` から ``default`` "
"の数値を返します。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.set:1
msgid "Store a key/value attribute with a given priority."
msgstr "指定の優先度でキー/値属性を保存します。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.set:3
msgid ""
"Settings should be populated *before* configuring the Crawler object "
"(through the :meth:`~scrapy.crawler.Crawler.configure` method), otherwise "
"they won't have any effect."
msgstr ""
"( :meth:`~scrapy.crawler.Crawler.configure` メソッドを使用して、)Crawlerオブ"
"ジェクトを設定する前に、設定を読み込む必要があります。設定しないと、効果があ"
"りません。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.set:10
msgid "the value to associate with the setting"
msgstr "設定に関連付ける値"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.set:13
msgid ""
"the priority of the setting. Should be a key of :attr:`~scrapy.settings."
"SETTINGS_PRIORITIES` or an integer"
msgstr ""
"設定の優先順位。 :attr:`~scrapy.settings.SETTINGS_PRIORITIES` のキーまたは整"
"数でなければなりません"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.setmodule:1
msgid "Store settings from a module with a given priority."
msgstr "与えられた優先度でモジュールの設定を保存します。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.setmodule:3
msgid ""
"This is a helper function that calls :meth:`~scrapy.settings.BaseSettings."
"set` for every globally declared uppercase variable of ``module`` with the "
"provided ``priority``."
msgstr ""
"これは、提供された ``priority`` で ``module`` のグローバルに宣言されたすべて"
"の大文字変数に対して :meth:`~scrapy.settings.BaseSettings.set` を呼び出すヘル"
"パー関数です。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.setmodule:7
msgid "the module or the path of the module"
msgstr "モジュールまたは、モジュールのパス(path)"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.setmodule:10
#: scrapy.settings.BaseSettings.update:17
msgid ""
"the priority of the settings. Should be a key of :attr:`~scrapy.settings."
"SETTINGS_PRIORITIES` or an integer"
msgstr ""
"設定の優先順位。 :attr:`~scrapy.settings.SETTINGS_PRIORITIES` のキーまたは整"
"数でなければなりません"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.update:1
msgid "Store key/value pairs with a given priority."
msgstr "与えられた優先度で キー/値 のペアを保存します。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.update:3
msgid ""
"This is a helper function that calls :meth:`~scrapy.settings.BaseSettings."
"set` for every item of ``values`` with the provided ``priority``."
msgstr ""
"これは、提供された ``priority`` を持つ ``values`` のすべての項目に対して :"
"meth:`~scrapy.settings.BaseSettings.set` を呼び出すヘルパー関数です。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.update:7
msgid ""
"If ``values`` is a string, it is assumed to be JSON-encoded and parsed into "
"a dict with ``json.loads()`` first. If it is a :class:`~scrapy.settings."
"BaseSettings` instance, the per-key priorities will be used and the "
"``priority`` parameter ignored. This allows inserting/updating settings with "
"different priorities with a single command."
msgstr ""
"``values`` が文字列の場合、JSONエンコードされていると見なされ、最初に ``json."
"loads()`` でパースされ辞書になります。 :class:`~scrapy.settings.BaseSettings`"
"インスタンスの場合、キーごとの優先度が使用され、 ``priority`` パラメーターは"
"無視されます。 これにより、単一のコマンドで異なる優先度の設定を挿入/更新でき"
"ます。"

#: ../../../scrapy/settings/__init__.py:docstring of
#: scrapy.settings.BaseSettings.update:14
msgid "the settings names and values"
msgstr "設定名と値"

#: ../../topics/api.rst:155
msgid "SpiderLoader API"
msgstr "SpiderLoader API"

#: ../../topics/api.rst:162
msgid ""
"This class is in charge of retrieving and handling the spider classes "
"defined across the project."
msgstr ""
"このクラスは、プロジェクト全体で定義されたスパイダー・クラスの取得と処理を担"
"当します。"

#: ../../topics/api.rst:165
msgid ""
"Custom spider loaders can be employed by specifying their path in the :"
"setting:`SPIDER_LOADER_CLASS` project setting. They must fully implement "
"the :class:`scrapy.interfaces.ISpiderLoader` interface to guarantee an "
"errorless execution."
msgstr ""
":setting:`SPIDER_LOADER_CLASS` プロジェクト設定でパスを指定することにより、カ"
"スタム・スパイダー・ローダーを使用できます。エラーのない実行を保証するに"
"は、 :class:`scrapy.interfaces.ISpiderLoader` インターフェースを完全に実装す"
"る必要があります。"

#: ../../topics/api.rst:172
msgid ""
"This class method is used by Scrapy to create an instance of the class. It's "
"called with the current project settings, and it loads the spiders found "
"recursively in the modules of the :setting:`SPIDER_MODULES` setting."
msgstr ""
"このクラスメソッドは、クラスのインスタンスを作成するためにScrapyによって使用"
"されます。現在のプロジェクト設定で呼び出され、 :setting:`SPIDER_MODULES` 設定"
"のモジュールで見つかったスパイダーを再帰的にロードします。"

#: ../../topics/api.rst:177
msgid "project settings"
msgstr "プロジェクト設定"

#: ../../topics/api.rst:182
msgid ""
"Get the Spider class with the given name. It'll look into the previously "
"loaded spiders for a spider class with name ``spider_name`` and will raise a "
"KeyError if not found."
msgstr ""
"指定された名前のSpiderクラスを取得します。 ``spider_name`` という名前のスパイ"
"ダークラスの、以前にロードされたスパイダーを調べ、見つからない場合はKeyError"
"を発生させます。"

#: ../../topics/api.rst:186
msgid "spider class name"
msgstr "スパイダー・クラス名"

#: ../../topics/api.rst:191
msgid "Get the names of the available spiders in the project."
msgstr "プロジェクトで利用可能なスパイダーの名前を取得します。"

#: ../../topics/api.rst:195
msgid ""
"List the spiders' names that can handle the given request. Will try to match "
"the request's url against the domains of the spiders."
msgstr ""
"指定されたリクエストを処理できるスパイダーの名前をリストします。リクエストの"
"URLをスパイダーのドメインと照合しようとします。"

#: ../../topics/api.rst:198
msgid "queried request"
msgstr "クエリされたリクエスト"

#: ../../topics/api.rst:204
msgid "Signals API"
msgstr "シグナルAPI"

#: ../../topics/api.rst:214
msgid "Stats Collector API"
msgstr "統計収集器API"

#: ../../topics/api.rst:216
msgid ""
"There are several Stats Collectors available under the :mod:`scrapy."
"statscollectors` module and they all implement the Stats Collector API "
"defined by the :class:`~scrapy.statscollectors.StatsCollector` class (which "
"they all inherit from)."
msgstr ""
":mod:`scrapy.statscollectors` モジュールの下にいくつかの統計収集器があり、そ"
"れらはすべて :class:`~scrapy.statscollectors.StatsCollector` クラス(すべての"
"継承元)で定義された統計収集器APIを実装します。"

#: ../../topics/api.rst:228
msgid ""
"Return the value for the given stats key or default if it doesn't exist."
msgstr ""
"指定された統計キーの値を返します。値が存在しない場合はデフォルトを返します。"

#: ../../topics/api.rst:232
msgid "Get all stats from the currently running spider as a dict."
msgstr "現在実行中のスパイダーからすべての統計を辞書として取得します。"

#: ../../topics/api.rst:236
msgid "Set the given value for the given stats key."
msgstr "与えられた統計キーに指定の値を設定します。"

#: ../../topics/api.rst:240
msgid "Override the current stats with the dict passed in ``stats`` argument."
msgstr "``stats`` 引数で渡された辞書で現在の統計を上書きします。"

#: ../../topics/api.rst:244
msgid ""
"Increment the value of the given stats key, by the given count, assuming the "
"start value given (when it's not set)."
msgstr ""
"(設定されていない場合は開始値を想定して、)指定された統計キーの値を指定された"
"カウントでインクリメントします。"

#: ../../topics/api.rst:249
msgid ""
"Set the given value for the given key only if current value for the same key "
"is lower than value. If there is no current value for the given key, the "
"value is always set."
msgstr ""
"同じキーの現在の値がvalueより小さい場合にのみ、指定されたキーに指定された値を"
"設定します。指定されたキーに現在の値がない場合、値は常に設定されます。"

#: ../../topics/api.rst:255
msgid ""
"Set the given value for the given key only if current value for the same key "
"is greater than value. If there is no current value for the given key, the "
"value is always set."
msgstr ""
"同じキーの現在の値がvalueより大きい場合にのみ、指定されたキーに指定された値を"
"設定します。指定されたキーに現在の値がない場合、値は常に設定されます。"

#: ../../topics/api.rst:261
msgid "Clear all stats."
msgstr "全ての統計をクリアする"

#: ../../topics/api.rst:263
msgid ""
"The following methods are not part of the stats collection api but instead "
"used when implementing custom stats collectors:"
msgstr ""
"次のメソッドは、統計収集APIの一部ではありませんが、代わりにカスタム統計収集器"
"を実装するときに使用されます:"

#: ../../topics/api.rst:268
msgid "Open the given spider for stats collection."
msgstr "統計収集のために、指定されたスパイダーを開きます。"

#: ../../topics/api.rst:272
msgid ""
"Close the given spider. After this is called, no more specific stats can be "
"accessed or collected."
msgstr ""
"指定されたスパイダーを閉じます。これが呼び出された後、これ以上特定の統計にア"
"クセスしたり収集したりすることはできません。"
