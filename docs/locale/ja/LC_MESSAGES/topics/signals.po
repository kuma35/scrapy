# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008â€“2021, Scrapy developers
# This file is distributed under the same license as the Scrapy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Scrapy 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-10 01:26+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../topics/signals.rst:5
msgid "Signals"
msgstr ""

#: ../../topics/signals.rst:7
msgid ""
"Scrapy uses signals extensively to notify when certain events occur. You "
"can catch some of those signals in your Scrapy project (using an "
":ref:`extension <topics-extensions>`, for example) to perform additional "
"tasks or extend Scrapy to add functionality not provided out of the box."
msgstr ""

#: ../../topics/signals.rst:12
msgid ""
"Even though signals provide several arguments, the handlers that catch "
"them don't need to accept all of them - the signal dispatching mechanism "
"will only deliver the arguments that the handler receives."
msgstr ""

#: ../../topics/signals.rst:16
msgid ""
"You can connect to signals (or send your own) through the :ref:`topics-"
"api-signals`."
msgstr ""

#: ../../topics/signals.rst:19
msgid ""
"Here is a simple example showing how you can catch signals and perform "
"some action::"
msgstr ""

#: ../../topics/signals.rst:51
msgid "Deferred signal handlers"
msgstr ""

#: ../../topics/signals.rst:53
msgid ""
"Some signals support returning :class:`~twisted.internet.defer.Deferred` "
"objects from their handlers, allowing you to run asynchronous code that "
"does not block Scrapy. If a signal handler returns a "
":class:`~twisted.internet.defer.Deferred`, Scrapy waits for that "
":class:`~twisted.internet.defer.Deferred` to fire."
msgstr ""

#: ../../topics/signals.rst:59
msgid "Let's take an example::"
msgstr ""

#: ../../topics/signals.rst:91
msgid ""
"See the :ref:`topics-signals-ref` below to know which signals support "
":class:`~twisted.internet.defer.Deferred`."
msgstr ""

#: ../../topics/signals.rst:97
msgid "Built-in signals reference"
msgstr ""

#: ../../topics/signals.rst:102
msgid "Here's the list of Scrapy built-in signals and their meaning."
msgstr ""

#: ../../topics/signals.rst:105
msgid "Engine signals"
msgstr ""

#: ../../topics/signals.rst:108
msgid "engine_started"
msgstr ""

#: ../../topics/signals.rst:113
msgid "Sent when the Scrapy engine has started crawling."
msgstr ""

#: ../../topics/signals.rst:115 ../../topics/signals.rst:130
#: ../../topics/signals.rst:152 ../../topics/signals.rst:172
#: ../../topics/signals.rst:197 ../../topics/signals.rst:223
#: ../../topics/signals.rst:247
msgid "This signal supports returning deferreds from its handlers."
msgstr ""

#: ../../topics/signals.rst:117
msgid ""
"This signal may be fired *after* the :signal:`spider_opened` signal, "
"depending on how the spider was started. So **don't** rely on this signal"
" getting fired before :signal:`spider_opened`."
msgstr ""

#: ../../topics/signals.rst:122
msgid "engine_stopped"
msgstr ""

#: ../../topics/signals.rst:127
msgid ""
"Sent when the Scrapy engine is stopped (for example, when a crawling "
"process has finished)."
msgstr ""

#: ../../topics/signals.rst:133
msgid "Item signals"
msgstr ""

#: ../../topics/signals.rst:136
msgid ""
"As at max :setting:`CONCURRENT_ITEMS` items are processed in parallel, "
"many deferreds are fired together using "
":class:`~twisted.internet.defer.DeferredList`. Hence the next batch waits"
" for the :class:`~twisted.internet.defer.DeferredList` to fire and then "
"runs the respective item signal handler for the next batch of scraped "
"items."
msgstr ""

#: ../../topics/signals.rst:144
msgid "item_scraped"
msgstr ""

#: ../../topics/signals.rst:149
msgid ""
"Sent when an item has been scraped, after it has passed all the :ref"
":`topics-item-pipeline` stages (without being dropped)."
msgstr ""

#: ../../topics/signals.rst
msgid "Parameters"
msgstr ""

#: ../../topics/signals.rst:154
msgid "the scraped item"
msgstr ""

#: ../../topics/signals.rst:157 ../../topics/signals.rst:177
msgid "the spider which scraped the item"
msgstr ""

#: ../../topics/signals.rst:160
msgid "the response from where the item was scraped"
msgstr ""

#: ../../topics/signals.rst:164
msgid "item_dropped"
msgstr ""

#: ../../topics/signals.rst:169
msgid ""
"Sent after an item has been dropped from the :ref:`topics-item-pipeline` "
"when some stage raised a :exc:`~scrapy.exceptions.DropItem` exception."
msgstr ""

#: ../../topics/signals.rst:174
msgid "the item dropped from the :ref:`topics-item-pipeline`"
msgstr ""

#: ../../topics/signals.rst:180
msgid "the response from where the item was dropped"
msgstr ""

#: ../../topics/signals.rst:183
msgid ""
"the exception (which must be a :exc:`~scrapy.exceptions.DropItem` "
"subclass) which caused the item to be dropped"
msgstr ""

#: ../../topics/signals.rst:189
msgid "item_error"
msgstr ""

#: ../../topics/signals.rst:194
msgid ""
"Sent when a :ref:`topics-item-pipeline` generates an error (i.e. raises "
"an exception), except :exc:`~scrapy.exceptions.DropItem` exception."
msgstr ""

#: ../../topics/signals.rst:199
msgid "the item that caused the error in the :ref:`topics-item-pipeline`"
msgstr ""

#: ../../topics/signals.rst:202 ../../topics/signals.rst:295
msgid "the response being processed when the exception was raised"
msgstr ""

#: ../../topics/signals.rst:205 ../../topics/signals.rst:298
msgid "the spider which raised the exception"
msgstr ""

#: ../../topics/signals.rst:208 ../../topics/signals.rst:292
msgid "the exception raised"
msgstr ""

#: ../../topics/signals.rst:212
msgid "Spider signals"
msgstr ""

#: ../../topics/signals.rst:215
msgid "spider_closed"
msgstr ""

#: ../../topics/signals.rst:220
msgid ""
"Sent after a spider has been closed. This can be used to release per-"
"spider resources reserved on :signal:`spider_opened`."
msgstr ""

#: ../../topics/signals.rst:225
msgid "the spider which has been closed"
msgstr ""

#: ../../topics/signals.rst:228
msgid ""
"a string which describes the reason why the spider was closed. If it was "
"closed because the spider has completed scraping, the reason is "
"``'finished'``. Otherwise, if the spider was manually closed by calling "
"the ``close_spider`` engine method, then the reason is the one passed in "
"the ``reason`` argument of that method (which defaults to "
"``'cancelled'``). If the engine was shutdown (for example, by hitting "
"Ctrl-C to stop it) the reason will be ``'shutdown'``."
msgstr ""

#: ../../topics/signals.rst:238
msgid "spider_opened"
msgstr ""

#: ../../topics/signals.rst:243
msgid ""
"Sent after a spider has been opened for crawling. This is typically used "
"to reserve per-spider resources, but can be used for any task that needs "
"to be performed when a spider is opened."
msgstr ""

#: ../../topics/signals.rst:249
msgid "the spider which has been opened"
msgstr ""

#: ../../topics/signals.rst:253
msgid "spider_idle"
msgstr ""

#: ../../topics/signals.rst:258
msgid "Sent when a spider has gone idle, which means the spider has no further:"
msgstr ""

#: ../../topics/signals.rst:260
msgid "requests waiting to be downloaded"
msgstr ""

#: ../../topics/signals.rst:261
msgid "requests scheduled"
msgstr ""

#: ../../topics/signals.rst:262
msgid "items being processed in the item pipeline"
msgstr ""

#: ../../topics/signals.rst:264
msgid ""
"If the idle state persists after all handlers of this signal have "
"finished, the engine starts closing the spider. After the spider has "
"finished closing, the :signal:`spider_closed` signal is sent."
msgstr ""

#: ../../topics/signals.rst:268
msgid ""
"You may raise a :exc:`~scrapy.exceptions.DontCloseSpider` exception to "
"prevent the spider from being closed."
msgstr ""

#: ../../topics/signals.rst:271 ../../topics/signals.rst:290
#: ../../topics/signals.rst:313 ../../topics/signals.rst:330
#: ../../topics/signals.rst:346 ../../topics/signals.rst:365
#: ../../topics/signals.rst:392 ../../topics/signals.rst:419
#: ../../topics/signals.rst:445 ../../topics/signals.rst:469
msgid "This signal does not support returning deferreds from its handlers."
msgstr ""

#: ../../topics/signals.rst:273
msgid "the spider which has gone idle"
msgstr ""

#: ../../topics/signals.rst:276
msgid ""
"Scheduling some requests in your :signal:`spider_idle` handler does "
"**not** guarantee that it can prevent the spider from being closed, "
"although it sometimes can. That's because the spider may still remain "
"idle if all the scheduled requests are rejected by the scheduler (e.g. "
"filtered due to duplication)."
msgstr ""

#: ../../topics/signals.rst:283
msgid "spider_error"
msgstr ""

#: ../../topics/signals.rst:288
msgid "Sent when a spider callback generates an error (i.e. raises an exception)."
msgstr ""

#: ../../topics/signals.rst:302
msgid "Request signals"
msgstr ""

#: ../../topics/signals.rst:305
msgid "request_scheduled"
msgstr ""

#: ../../topics/signals.rst:310
msgid ""
"Sent when the engine schedules a :class:`~scrapy.http.Request`, to be "
"downloaded later."
msgstr ""

#: ../../topics/signals.rst:315 ../../topics/signals.rst:332
msgid "the request that reached the scheduler"
msgstr ""

#: ../../topics/signals.rst:318 ../../topics/signals.rst:335
#: ../../topics/signals.rst:351 ../../topics/signals.rst:370
msgid "the spider that yielded the request"
msgstr ""

#: ../../topics/signals.rst:322
msgid "request_dropped"
msgstr ""

#: ../../topics/signals.rst:327
msgid ""
"Sent when a :class:`~scrapy.http.Request`, scheduled by the engine to be "
"downloaded later, is rejected by the scheduler."
msgstr ""

#: ../../topics/signals.rst:339
msgid "request_reached_downloader"
msgstr ""

#: ../../topics/signals.rst:344
msgid "Sent when a :class:`~scrapy.http.Request` reached downloader."
msgstr ""

#: ../../topics/signals.rst:348
msgid "the request that reached downloader"
msgstr ""

#: ../../topics/signals.rst:355
msgid "request_left_downloader"
msgstr ""

#: ../../topics/signals.rst:362
msgid ""
"Sent when a :class:`~scrapy.http.Request` leaves the downloader, even in "
"case of failure."
msgstr ""

#: ../../topics/signals.rst:367
msgid "the request that reached the downloader"
msgstr ""

#: ../../topics/signals.rst:374
msgid "bytes_received"
msgstr ""

#: ../../topics/signals.rst:381
msgid ""
"Sent by the HTTP 1.1 and S3 download handlers when a group of bytes is "
"received for a specific request. This signal might be fired multiple "
"times for the same request, with partial data each time. For instance, a "
"possible scenario for a 25 kb response would be two signals fired with 10"
" kb of data, and a final one with 5 kb of data."
msgstr ""

#: ../../topics/signals.rst:387 ../../topics/signals.rst:414
msgid ""
"Handlers for this signal can stop the download of a response while it is "
"in progress by raising the :exc:`~scrapy.exceptions.StopDownload` "
"exception. Please refer to the :ref:`topics-stop-response-download` topic"
" for additional information and examples."
msgstr ""

#: ../../topics/signals.rst:394
msgid "the data received by the download handler"
msgstr ""

#: ../../topics/signals.rst:397 ../../topics/signals.rst:427
msgid "the request that generated the download"
msgstr ""

#: ../../topics/signals.rst:400 ../../topics/signals.rst:430
msgid "the spider associated with the response"
msgstr ""

#: ../../topics/signals.rst:404
msgid "headers_received"
msgstr ""

#: ../../topics/signals.rst:411
msgid ""
"Sent by the HTTP 1.1 and S3 download handlers when the response headers "
"are available for a given request, before downloading any additional "
"content."
msgstr ""

#: ../../topics/signals.rst:421
msgid "the headers received by the download handler"
msgstr ""

#: ../../topics/signals.rst:424
msgid "expected size of the response body, in bytes"
msgstr ""

#: ../../topics/signals.rst:434
msgid "Response signals"
msgstr ""

#: ../../topics/signals.rst:437
msgid "response_received"
msgstr ""

#: ../../topics/signals.rst:442
msgid ""
"Sent when the engine receives a new :class:`~scrapy.http.Response` from "
"the downloader."
msgstr ""

#: ../../topics/signals.rst:447
msgid "the response received"
msgstr ""

#: ../../topics/signals.rst:450 ../../topics/signals.rst:474
msgid "the request that generated the response"
msgstr ""

#: ../../topics/signals.rst:453 ../../topics/signals.rst:477
msgid "the spider for which the response is intended"
msgstr ""

#: ../../topics/signals.rst:456
msgid ""
"The ``request`` argument might not contain the original request that "
"reached the downloader, if a :ref:`topics-downloader-middleware` modifies"
" the :class:`~scrapy.http.Response` object and sets a specific "
"``request`` attribute."
msgstr ""

#: ../../topics/signals.rst:462
msgid "response_downloaded"
msgstr ""

#: ../../topics/signals.rst:467
msgid "Sent by the downloader right after a ``HTTPResponse`` is downloaded."
msgstr ""

#: ../../topics/signals.rst:471
msgid "the response downloaded"
msgstr ""

