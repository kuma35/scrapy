# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008–2018, Scrapy developers
# This file is distributed under the same license as the Scrapy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Scrapy \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-10 01:26+0900\n"
"PO-Revision-Date: 2021-06-02 08:19+0900\n"
"Last-Translator: kuma35\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../topics/signals.rst:5
msgid "Signals"
msgstr "シグナル"

#: ../../topics/signals.rst:7
msgid ""
"Scrapy uses signals extensively to notify when certain events occur. You can "
"catch some of those signals in your Scrapy project (using an :ref:`extension "
"<topics-extensions>`, for example) to perform additional tasks or extend "
"Scrapy to add functionality not provided out of the box."
msgstr ""
"Scrapyは、特定のイベントが発生したときに通知するためにシグナルを広範囲に使用"
"します。 Scrapyプロジェクトでこれらのシグナルの一部をキャッチして(たとえば :"
"ref:`拡張機能<topics-extensions>` で)、追加のタスクを実行したり、Scrapyを拡張"
"してすぐに使用できない機能を追加したりできます。"

#: ../../topics/signals.rst:12
msgid ""
"Even though signals provide several arguments, the handlers that catch them "
"don't need to accept all of them - the signal dispatching mechanism will "
"only deliver the arguments that the handler receives."
msgstr ""
"シグナルはいくつかの引数を提供しますが、それらをキャッチするハンドラーはそれ"
"らのすべてを受け入れる必要はありません。シグナル・ディスパッチ・メカニズムは"
"ハンドラーが受け取る引数のみを配信します。"

#: ../../topics/signals.rst:16
msgid ""
"You can connect to signals (or send your own) through the :ref:`topics-api-"
"signals`."
msgstr ""
"あなたは :ref:`topics-api-signals` を介してシグナルに接続(または独自に送信)で"
"きます。"

#: ../../topics/signals.rst:19
msgid ""
"Here is a simple example showing how you can catch signals and perform some "
"action::"
msgstr ""
"シグナルをキャッチして何らかのアクションを実行する方法を示す簡単な例を次に示"
"します::"

#: ../../topics/signals.rst:51
msgid "Deferred signal handlers"
msgstr "シグナル・ハンドラーの遅延(deferred)"

#: ../../topics/signals.rst:53
msgid ""
"Some signals support returning :class:`~twisted.internet.defer.Deferred` "
"objects from their handlers, allowing you to run asynchronous code that does "
"not block Scrapy. If a signal handler returns a :class:`~twisted.internet."
"defer.Deferred`, Scrapy waits for that :class:`~twisted.internet.defer."
"Deferred` to fire."
msgstr "一部のシグナルはハンドラーから :class:`~twisted.internet.defer.Deferred` オブジェクトを返すことをサポートしており、Scrapy をブロックしない非同期コードを実行できます。 シグナルハンドラが :class:`~twisted.internet.defer.Deferred` を返した場合、Scrapy はその :class:`~twisted.internet.defer.Deferred` が起動するのを待ちます。"

#: ../../topics/signals.rst:59
msgid "Let's take an example::"
msgstr "例を見てみましょう::"

#: ../../topics/signals.rst:91
msgid ""
"See the :ref:`topics-signals-ref` below to know which signals support :class:"
"`~twisted.internet.defer.Deferred`."
msgstr "どのシグナルが :class:`~twisted.internet.defer.Deferred` をサポートするかについては、以下の :ref:`topics-signals-ref` を参照してください。"

#: ../../topics/signals.rst:97
msgid "Built-in signals reference"
msgstr "組み込みシグナル・リファレンス"

#: ../../topics/signals.rst:102
msgid "Here's the list of Scrapy built-in signals and their meaning."
msgstr "Scrapy組み込みシグナルとその意味のリストを以下に示します。"

#: ../../topics/signals.rst:105
msgid "Engine signals"
msgstr "エンジン・シグナル群"

#: ../../topics/signals.rst:108
msgid "engine_started"
msgstr "engine_started"

#: ../../topics/signals.rst:113
msgid "Sent when the Scrapy engine has started crawling."
msgstr "Scrapyエンジンがクロールを開始すると送信されます。"

#: ../../topics/signals.rst:115 ../../topics/signals.rst:130
#: ../../topics/signals.rst:152 ../../topics/signals.rst:172
#: ../../topics/signals.rst:197 ../../topics/signals.rst:223
#: ../../topics/signals.rst:247
msgid "This signal supports returning deferreds from its handlers."
msgstr ""
"このシグナルは、ハンドラーから遅延オブジェクト(deferred)を返すことをサポート"
"しています。"

#: ../../topics/signals.rst:117
msgid ""
"This signal may be fired *after* the :signal:`spider_opened` signal, "
"depending on how the spider was started. So **don't** rely on this signal "
"getting fired before :signal:`spider_opened`."
msgstr ""
"このシグナルは、スパイダーの起動方法に応じて、 :signal:`spider_opened` シグナ"
"ルの **後に** 起動される場合があります。 そのため、 :signal:`spider_opened` "
"の前にこのシグナルが発生することに依存しないでください。"

#: ../../topics/signals.rst:122
msgid "engine_stopped"
msgstr "engine_stopped"

#: ../../topics/signals.rst:127
msgid ""
"Sent when the Scrapy engine is stopped (for example, when a crawling process "
"has finished)."
msgstr ""
"Scrapyエンジンが停止(stop)したときに送信されます(たとえば、クロール・プロセス"
"が終了したとき)。"

#: ../../topics/signals.rst:133
msgid "Item signals"
msgstr "アイテム・シグナル群"

#: ../../topics/signals.rst:136
msgid ""
"As at max :setting:`CONCURRENT_ITEMS` items are processed in parallel, many "
"deferreds are fired together using :class:`~twisted.internet.defer."
"DeferredList`. Hence the next batch waits for the :class:`~twisted.internet."
"defer.DeferredList` to fire and then runs the respective item signal handler "
"for the next batch of scraped items."
msgstr "最大 :setting:`CONCURRENT_ITEMS` 数のアイテムが並行して処理されるため、多くの遅延(deferred)は :class:`~twisted.internet.defer.DeferredList` を使用して同時に起動されます。 したがって、以下のバッチは :class:`~twisted.internet.defer.DeferredList` が起動するのを待ってから、スクレイピングされたアイテムの次のバッチに対してそれぞれのアイテム・シグナル・ハンドラーを実行します。"

#: ../../topics/signals.rst:144
msgid "item_scraped"
msgstr "item_scraped"

#: ../../topics/signals.rst:149
msgid ""
"Sent when an item has been scraped, after it has passed all the :ref:`topics-"
"item-pipeline` stages (without being dropped)."
msgstr ""
"すべての :ref:`topics-item-pipeline` ステージを(ドロップされることなく)通過し"
"た後、アイテムがスクレイプされたときに送信されます。"

#: ../../topics/signals.rst:0
msgid "Parameters"
msgstr "パラメータ"

#: ../../topics/signals.rst:154
msgid "the scraped item"
msgstr "スクレイプされたアイテム"

#: ../../topics/signals.rst:157 ../../topics/signals.rst:177
msgid "the spider which scraped the item"
msgstr "アイテムをスクレイプしたスパイダー"

#: ../../topics/signals.rst:160
msgid "the response from where the item was scraped"
msgstr "アイテムがスクレイピングされたレスポンス"

#: ../../topics/signals.rst:164
msgid "item_dropped"
msgstr "item_dropped"

#: ../../topics/signals.rst:169
msgid ""
"Sent after an item has been dropped from the :ref:`topics-item-pipeline` "
"when some stage raised a :exc:`~scrapy.exceptions.DropItem` exception."
msgstr ""
"あるステージで :exc:`~scrapy.exceptions.DropItem` 例外が発生したときに、アイ"
"テムが :ref:`topics-item-pipeline` からドロップされた後に送信されます。"

#: ../../topics/signals.rst:174
msgid "the item dropped from the :ref:`topics-item-pipeline`"
msgstr ":ref:`topics-item-pipeline` からドロップされたアイテム"

#: ../../topics/signals.rst:180
msgid "the response from where the item was dropped"
msgstr "アイテムがドロップされたレスポンス"

#: ../../topics/signals.rst:183
msgid ""
"the exception (which must be a :exc:`~scrapy.exceptions.DropItem` subclass) "
"which caused the item to be dropped"
msgstr ""
"アイテムがドロップされる原因となった例外( :exc:`~scrapy.exceptions.DropItem` "
"のサブクラスでなければなりません)"

#: ../../topics/signals.rst:189
msgid "item_error"
msgstr "item_error"

#: ../../topics/signals.rst:194
msgid ""
"Sent when a :ref:`topics-item-pipeline` generates an error (i.e. raises an "
"exception), except :exc:`~scrapy.exceptions.DropItem` exception."
msgstr ""
":exc:`~scrapy.exceptions.DropItem` 例外を除き、 :ref:`topics-item-pipeline` "
"がエラーを生成した(つまり、例外を発生させた)ときに送信されます。"

#: ../../topics/signals.rst:199
msgid "the item that caused the error in the :ref:`topics-item-pipeline`"
msgstr ":ref:`topics-item-pipeline` でエラーの原因となったアイテム"

#: ../../topics/signals.rst:202 ../../topics/signals.rst:295
msgid "the response being processed when the exception was raised"
msgstr "例外が発生したときに処理されていたレスポンス"

#: ../../topics/signals.rst:205 ../../topics/signals.rst:298
msgid "the spider which raised the exception"
msgstr "例外を発生させたスパイダー"

#: ../../topics/signals.rst:208 ../../topics/signals.rst:292
msgid "the exception raised"
msgstr "例外が発生した"

#: ../../topics/signals.rst:212
msgid "Spider signals"
msgstr "スパイダー・シグナル群"

#: ../../topics/signals.rst:215
msgid "spider_closed"
msgstr "spider_closed"

#: ../../topics/signals.rst:220
msgid ""
"Sent after a spider has been closed. This can be used to release per-spider "
"resources reserved on :signal:`spider_opened`."
msgstr ""
"スパイダーが閉じられた後に送信されます。 これは、 :signal:`spider_opened` で"
"予約しているスパイダーごとのリソースを解放するために使用できます。"

#: ../../topics/signals.rst:225
msgid "the spider which has been closed"
msgstr "スパイダーがクローズされた"

#: ../../topics/signals.rst:228
msgid ""
"a string which describes the reason why the spider was closed. If it was "
"closed because the spider has completed scraping, the reason is "
"``'finished'``. Otherwise, if the spider was manually closed by calling the "
"``close_spider`` engine method, then the reason is the one passed in the "
"``reason`` argument of that method (which defaults to ``'cancelled'``). If "
"the engine was shutdown (for example, by hitting Ctrl-C to stop it) the "
"reason will be ``'shutdown'``."
msgstr ""
"スパイダーが閉じられた理由を説明する文字列。 スパイダーがスクレイピングを完了"
"したために閉じられた場合、その理由は ``'finished'`` です。そうでなければ、 "
"``close_spider`` エンジン・メソッドを呼び出してスパイダーを手動で閉じた場合、"
"その理由はそのメソッドの ``reason`` 数に渡されたものが使われます(デフォルト"
"は ``'cancelled'`` です)。エンジンがシャットダウン(たとえば、Ctrl-Cを押してエ"
"ンジンを停止）された場合、理由は ``'shutdown'`` です。"

#: ../../topics/signals.rst:238
msgid "spider_opened"
msgstr "spider_opened"

#: ../../topics/signals.rst:243
msgid ""
"Sent after a spider has been opened for crawling. This is typically used to "
"reserve per-spider resources, but can be used for any task that needs to be "
"performed when a spider is opened."
msgstr ""
"クロールのためにスパイダーがオープンされた後に送信されます。これは通常、スパ"
"イダーごとのリソースを予約するために使用されますが、スパイダーが開かれたとき"
"に実行する必要があるタスクに使用できます。"

#: ../../topics/signals.rst:249
msgid "the spider which has been opened"
msgstr "スパイダーがオープンされた"

#: ../../topics/signals.rst:253
msgid "spider_idle"
msgstr "spider_idle"

#: ../../topics/signals.rst:258
msgid ""
"Sent when a spider has gone idle, which means the spider has no further:"
msgstr ""
"スパイダーがアイドル状態になったときに送信されます。つまり、スパイダーはそれ"
"以降何もしない事を意味します:"

#: ../../topics/signals.rst:260
msgid "requests waiting to be downloaded"
msgstr "リクエストがダウンロード待ち"

#: ../../topics/signals.rst:261
msgid "requests scheduled"
msgstr "リクエストがスケジュールされた"

#: ../../topics/signals.rst:262
msgid "items being processed in the item pipeline"
msgstr "アイテムがアイテム・パイプラインで処理中"

#: ../../topics/signals.rst:264
msgid ""
"If the idle state persists after all handlers of this signal have finished, "
"the engine starts closing the spider. After the spider has finished closing, "
"the :signal:`spider_closed` signal is sent."
msgstr ""
"このシグナルのすべてのハンドラーが終了した後もアイドル状態が続く場合、エンジ"
"ンはスパイダーを閉じ始めます。スパイダーのクローズが完了すると、 :signal:"
"`spider_closed` シグナルが送信されます。"

#: ../../topics/signals.rst:268
msgid ""
"You may raise a :exc:`~scrapy.exceptions.DontCloseSpider` exception to "
"prevent the spider from being closed."
msgstr ""
"あなたは :exc:`~scrapy.exceptions.DontCloseSpider` 例外を発生させて、スパイ"
"ダーが閉じられないようにすることができます。"

#: ../../topics/signals.rst:271 ../../topics/signals.rst:290
#: ../../topics/signals.rst:313 ../../topics/signals.rst:330
#: ../../topics/signals.rst:346 ../../topics/signals.rst:365
#: ../../topics/signals.rst:392 ../../topics/signals.rst:419
#: ../../topics/signals.rst:445 ../../topics/signals.rst:469
msgid "This signal does not support returning deferreds from its handlers."
msgstr ""
"このシグナルは、ハンドラーから遅延オブジェクト(deferred)を返すことをサポート"
"していません。"

#: ../../topics/signals.rst:273
msgid "the spider which has gone idle"
msgstr "アイドルに移行したスパイダー"

#: ../../topics/signals.rst:276
msgid ""
"Scheduling some requests in your :signal:`spider_idle` handler does **not** "
"guarantee that it can prevent the spider from being closed, although it "
"sometimes can. That's because the spider may still remain idle if all the "
"scheduled requests are rejected by the scheduler (e.g. filtered due to "
"duplication)."
msgstr ""
"あなたの :signal:`spider_idle` ハンドラーでいくつかのリクエストをスケジュール"
"すると、スパイダーが閉じられるのを防ぐことができるという保証はありませんが、"
"できる場合もあります。これは、スケジュールされたすべてのリクエストがスケ"
"ジューラによって拒否された場合(たとえば、重複のためにフィルター処理された場"
"合)、スパイダーがアイドル状態のままになる可能性があるためです。"

#: ../../topics/signals.rst:283
msgid "spider_error"
msgstr "spider_error"

#: ../../topics/signals.rst:288
msgid ""
"Sent when a spider callback generates an error (i.e. raises an exception)."
msgstr ""
"スパイダー・コールバックがエラーを生成する(つまり、例外を発生させる)ときに送"
"信されます。"

#: ../../topics/signals.rst:302
msgid "Request signals"
msgstr "リクエスト・シグナル群"

#: ../../topics/signals.rst:305
msgid "request_scheduled"
msgstr "request_scheduled"

#: ../../topics/signals.rst:310
msgid ""
"Sent when the engine schedules a :class:`~scrapy.http.Request`, to be "
"downloaded later."
msgstr ""
"エンジンが :class:`~scrapy.http.Request` をスケジュールしたときに送信され、後"
"でダウンロードされます。"

#: ../../topics/signals.rst:315 ../../topics/signals.rst:332
msgid "the request that reached the scheduler"
msgstr "リクエストはスケジューラに到達した"

#: ../../topics/signals.rst:318 ../../topics/signals.rst:335
#: ../../topics/signals.rst:351 ../../topics/signals.rst:370
msgid "the spider that yielded the request"
msgstr "スパイダーはリクエストを生成(yield)した"

#: ../../topics/signals.rst:322
msgid "request_dropped"
msgstr "request_dropped"

#: ../../topics/signals.rst:327
msgid ""
"Sent when a :class:`~scrapy.http.Request`, scheduled by the engine to be "
"downloaded later, is rejected by the scheduler."
msgstr ""
"後でダウンロードされるようにエンジンによってスケジュールされた :class:"
"`~scrapy.http.Request` がスケジューラーによって拒否されたときに送信されます。"

#: ../../topics/signals.rst:339
msgid "request_reached_downloader"
msgstr "request_reached_downloader"

#: ../../topics/signals.rst:344
msgid "Sent when a :class:`~scrapy.http.Request` reached downloader."
msgstr ""
":class:`~scrapy.http.Request` がダウンローダーに到達すると送信されます。"

#: ../../topics/signals.rst:348
msgid "the request that reached downloader"
msgstr "リクエストはダウンローダーに到達した"

#: ../../topics/signals.rst:355
msgid "request_left_downloader"
msgstr "request_left_downloader"

#: ../../topics/signals.rst:362
msgid ""
"Sent when a :class:`~scrapy.http.Request` leaves the downloader, even in "
"case of failure."
msgstr "失敗した場合でも、ダウンローダーを離れるときに :class:`~scrapy.http.Request` が送信されます。"

#: ../../topics/signals.rst:367
msgid "the request that reached the downloader"
msgstr "リクエストはダウンローダーに到達した"

#: ../../topics/signals.rst:374
msgid "bytes_received"
msgstr "bytes_received"

#: ../../topics/signals.rst:381
msgid ""
"Sent by the HTTP 1.1 and S3 download handlers when a group of bytes is "
"received for a specific request. This signal might be fired multiple times "
"for the same request, with partial data each time. For instance, a possible "
"scenario for a 25 kb response would be two signals fired with 10 kb of data, "
"and a final one with 5 kb of data."
msgstr "特定のリクエストに対してバイトのグループが受信されたときに、HTTP 1.1 および S3 ダウンロード・ハンドラーによって送信されます。 このシグナルは、同じリクエストに対して複数回発生する可能性があり、そのたびに部分的なデータが生成されます。 たとえば、25 kb のレスポンスのシナリオとしては、2 つの信号が 10 kb のデータで発信され、最後の信号が 5 kb のデータで発信されます。"

#: ../../topics/signals.rst:387 ../../topics/signals.rst:414
msgid ""
"Handlers for this signal can stop the download of a response while it is in "
"progress by raising the :exc:`~scrapy.exceptions.StopDownload` exception. "
"Please refer to the :ref:`topics-stop-response-download` topic for "
"additional information and examples."
msgstr "このシグナルのハンドラは :exc:`~scrapy.exceptions.StopDownload` 例外を発生させることで進行中のレスポンスのダウンロードを停止できます. 追加情報と例については、:ref:`topics-stop-response-download` トピックを参照してください。"

#: ../../topics/signals.rst:394
msgid "the data received by the download handler"
msgstr "ダウンロード・ハンドラーによって受信されたデータ"

#: ../../topics/signals.rst:397 ../../topics/signals.rst:427
msgid "the request that generated the download"
msgstr "ダウンロードを生成したリクエスト"

#: ../../topics/signals.rst:400 ../../topics/signals.rst:430
msgid "the spider associated with the response"
msgstr "レスポンスに関連付けられたスパイダー"

#: ../../topics/signals.rst:404
msgid "headers_received"
msgstr "headers_received"

#: ../../topics/signals.rst:411
msgid ""
"Sent by the HTTP 1.1 and S3 download handlers when the response headers are "
"available for a given request, before downloading any additional content."
msgstr "追加のコンテンツをダウンロードする前に、特定のリクエストに対してレスポンス・ヘッダーが使用可能な場合に、HTTP 1.1 および S3 ダウンロード・ハンドラーによって送信されます。"

#: ../../topics/signals.rst:421
msgid "the headers received by the download handler"
msgstr "ダウンロード・ハンドラーによって受信されたヘッダー"

#: ../../topics/signals.rst:424
msgid "expected size of the response body, in bytes"
msgstr "レスポンス・ボディの期待するサイズ(バイト単位)"

#: ../../topics/signals.rst:434
msgid "Response signals"
msgstr "レスポンス・シグナル群"

#: ../../topics/signals.rst:437
msgid "response_received"
msgstr "response_received"

#: ../../topics/signals.rst:442
msgid ""
"Sent when the engine receives a new :class:`~scrapy.http.Response` from the "
"downloader."
msgstr ""
"エンジンがダウンローダーから新しい :class:`~scrapy.http.Response` を受信する"
"と送信されます。"

#: ../../topics/signals.rst:447
msgid "the response received"
msgstr "レスポンスを受信した"

#: ../../topics/signals.rst:450 ../../topics/signals.rst:474
msgid "the request that generated the response"
msgstr "レスポンスを生成したリクエスト"

#: ../../topics/signals.rst:453 ../../topics/signals.rst:477
msgid "the spider for which the response is intended"
msgstr "そのレスポンスを意図したスパイダー"

#: ../../topics/signals.rst:456
msgid ""
"The ``request`` argument might not contain the original request that reached "
"the downloader, if a :ref:`topics-downloader-middleware` modifies the :class:"
"`~scrapy.http.Response` object and sets a specific ``request`` attribute."
msgstr ":ref:`topics-downloader-middleware` が :class:`~scrapy.http.Response` オブジェクトを変更し、特定の ``request`` 属性を設定する場合、``request`` 引数はダウンローダに届いた元のリクエストを含まない可能性があります。"

#: ../../topics/signals.rst:462
msgid "response_downloaded"
msgstr "response_downloaded"

#: ../../topics/signals.rst:467
msgid "Sent by the downloader right after a ``HTTPResponse`` is downloaded."
msgstr ""
"``HTTPResponse`` がダウンロードされた直後に、ダウンローダーによって送信されま"
"す。"

#: ../../topics/signals.rst:471
msgid "the response downloaded"
msgstr "レスポンスがダウンロードされた"
